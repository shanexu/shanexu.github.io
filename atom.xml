<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Shane Xu's Home]]></title>
  <link href="http://shanexu.org/atom.xml" rel="self"/>
  <link href="http://shanexu.org/"/>
  <updated>2014-04-05T22:58:39+08:00</updated>
  <id>http://shanexu.org/</id>
  <author>
    <name><![CDATA[Shane Xu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Java Code Conventions]]></title>
    <link href="http://shanexu.org/blog/2013/05/22/java-code-conventions/"/>
    <updated>2013-05-22T21:33:00+08:00</updated>
    <id>http://shanexu.org/blog/2013/05/22/java-code-conventions</id>
    <content type="html"><![CDATA[<p>今天想聊一下java的代码规范的事情。</p>

<p>想写这样的篇文章并不是什么空穴来风，我想起过去在某公司实习的日子，被当时的主管不停的叮嘱coding style的日子，终于现在轮到自己看代码的时候，才意识coding style的重要性。</p>

<p>于是在google搜索java coding style，结果出来的sun在1997年的时候写的<a href="http://www.oracle.com/technetwork/java/codeconv-138413.html"><em>Java Code Conventions</em></a>，笔者觉得这是一篇非常值得仔细阅读的文章。在这里笔者摘出一些，自己认为比较重要的条目。</p>

<h2>1.1 Why Have Code Conventions</h2>

<p>Code conventions are important to programmers for a number of reasons:</p>

<p>• 80% of the lifetime cost of a piece of software goes to maintenance.<br/>
软件开发的生命周期中80%时间花在维护上。<br/>
• Hardly any software is maintained for its whole life by the original author.<br/>
在软件开发的整个生命周期中，很少有软件的维护完全是由原开发者完成的。<br/>
• Code conventions improve the readability of the software, allowing engineers to understand new code more quickly and thoroughly.<br/>
代码约定能够提高代码的可读性，能够使得工程师们更快更透彻地理解新代码。<br/>
• If you ship your source code as a product, you need to make sure it is as well packaged and clean as any other product you create.<br/>
如果你要将你的源代码随着你的产品一起发布，你必须确保它们如你的别的产品一样的封装完备且干净。</p>

<h3>3.1.3 Class and Interface Declarations</h3>

<p>1. Class/interface documentation comment(/**..*/)
类或接口的文档<br/>
2. Class or interfaces statement
类或接口声明<br/>
3. Class/interface implementation comment(/*&hellip;*/), if necessary
类或接口的实现注释（可选）<br/>
4. Class (static) variables
类（静态）变量<br/>
5. Instance variables
实例变量<br/>
6. Constructors
构造方法<br/>
7. Methods
类方法（类方法的组织不需要按照scop来排序，而是按照业务需求来进行排序）</p>

<h2>6.1 Number Per Line</h2>

<p>One declaration per line is recomended since it encourages commenting. In other words,<br/>
每个声明独占一行，这样也更容易对变量进行注释，也就是说，</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kt">int</span> <span class="n">level</span><span class="o">;</span> <span class="c1">// indentation level</span>
</span><span class='line'><span class="kt">int</span> <span class="n">size</span><span class="o">;</span>  <span class="c1">// size of table</span>
</span></code></pre></td></tr></table></div></figure>


<p>is preferred over<br/>
上面的代码比下面的代码更符合规范。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kt">int</span> <span class="n">level</span><span class="o">,</span> <span class="n">size</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>6.2 Placement</h2>

<p>Put declarations only at the beginning of blocks. (A block is any code surrounded by curly braces &ldquo;{&rdquo; and &ldquo;}&rdquo;.) Don’t wait to declare variables until their first use; it can confuse the unwary programmer and hamper code portability within the scope.<br/>
将变量声明放置在代码块开始的地方。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kt">void</span> <span class="nf">MyMethod</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">int1</span><span class="o">;</span>              <span class="c1">// beginning of method block</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">condition</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">int2</span><span class="o">;</span>          <span class="c1">// beginning of &quot;if&quot; block</span>
</span><span class='line'>        <span class="o">...</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The one exception to the rule is indexes of for loops, which in Java can be declared in the for statement:<br/>
对于这一条，只有一个特例，就是for循环。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">maxLoops</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span> <span class="o">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>Avoid local declarations that hide declarations at higher levels. For example, do not declare the same variable name in an inner block:<br/>
注意不要在更深层的代码块中使用与外部代码块相同的变量名。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kt">int</span> <span class="n">count</span><span class="o">;</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="n">func</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="o">(</span><span class="n">condition</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kt">int</span> <span class="n">count</span><span class="o">;</span>
</span><span class='line'>        <span class="o">...</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="o">...</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>9. Naming Conventions</h1>

<p>命名规范</p>

<table>
<tr>
<th>Identifier Type</th>
<th>Rules for Naming</th>
<th>Rules for Naming|Examples</th>
</tr>
<tr>
<td>Classes</td>
<td>Class names should be nouns, in mixed case with the first letter of each internal word capitalized. Thy to keep your class names simple and descriptive. Use whole words&#8211;avoid acronyms and abbreviations (unless the abbreviation is much more widely used than the long form, such as URL or HTML).</td>
<td>class Raster;<br> class ImageSprite; </td>
</tr>
<tr>
<td>Interfaces</td>
<td>Interface names should be capitalized like class names. </td>
<td>interface RasterDelegate;<br>interface Storing;</td>
</tr>
<tr>
<td>Methods</td>
<td>Methods should be verbs, in mixed case with the first letter lowercase, with the first letter of each internal word capitalized. </td>
<td>run();<br>runFast();<br>getBackground();</td>
</tr>
<tr>
<td>Variables</td>
<td>Except for variables, all instance, class, and 
class constants are in mixed case with a lower- 
case first letter. Internal words start with capi- 
tal letters. 
Variable names should be short yet meaningful. The choice of a variable name should be mnemonic&#8211;that is, designed to indicate to the casual observer the intent of its use. One-char-acter variable names should be avoided except for temporary “throwaway” variables. Common names for temporary variables are i, j, k, m, and n for integers; c, d, and e for characters.</td>
<td>int i;<br>char cp;<br>flaot myWidth;</td>
</tr>
<tr>
<td>Constants</td>
<td>The names of variables declared class constants and of ANSI constants should be all uppercase with words separated by underscores (&#8220;_&#8221;). (ANSI constants should be avoided, for ease of debugging.)</td>
<td>int MIN_WIDTH = 4;<br>int MAX_WIDTH = 999;<br>int GET_THE_CPU = 1;</td>
</tr>
</table>


<h1>10. Programming Practices</h1>

<h2>10.1 Providing Access to Instance and Class Variables</h2>

<p>防止直接访问实例或者类的变量</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[macbook fn key and Linux]]></title>
    <link href="http://shanexu.org/blog/2013/04/29/macbook-fn-key-and-linux/"/>
    <updated>2013-04-29T15:01:00+08:00</updated>
    <id>http://shanexu.org/blog/2013/04/29/macbook-fn-key-and-linux</id>
    <content type="html"><![CDATA[<div class="begin-indent2em"></div>


<p>其实我呢，很不喜欢os x的function key的默认设置，也就是说当我按下F1的时候实际上降低亮度，而且我会经常用到F12，呼出firebug的快捷键，所以在os x下我会改掉function key的默认行为。</p>

<p>然后是新问题，虽然这个问题在刚买了MacBook的那个星期里就碰到了，并且在读了archlinux wiki之后很轻松地解决了，但是直到现在我才想把这个过程写下来。</p>

<p>我的在MacBook上装好LInux之后遇到了些许问题。比如，如何引导Linux启动，然后就是如何设置那个莫名奇妙的function key。</p>

<p>其实要配置到我需要的模式，只需要执行一句命令就可以了</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo 2 | sudo tee &gt; /sys/module/hid_apple/parameters/fnmode</span></code></pre></td></tr></table></div></figure>


<p>之后就是开机自动执行这个命令，在早些版本的archlinux可以将这些命令放在<em>/etc/rc.local</em>中，然而现在的archlinux使用systemd取代了原先的sysvinit。</p>

<blockquote><p>systemd is a system and service manager for Linux, compatible with SysV and LSB init scripts. systemd provides aggressive parallelization capabilities, uses socket and D-Bus activation for starting services, offers on-demand starting of daemons, keeps track of processes using Linux control groups, supports snapshotting and restoring of the system state, maintains mount and automount points and implements an elaborate transactional dependency-based service control logic. It can work as a drop-in replacement for sysvinit.</p></blockquote>


<p>带来便利的同时必然也会带来不便。以前也许只要rc.conf或者rc.local中添加几行代码的事情，现在可能就要写一大段代码然后再加上执行几个命令，有时候，不知道这样的做法是在进步还是一种退步。于是在arch wiki上看了systemd的文档，然后试着去写了一个设置function key的系统服务。</p>

<p>在目录/usr/lib/systemd/system/下创建一个名为fnkey.service的文件，填入以下内容。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[Unit]
</span><span class='line'>Description=Set MacBook Fn key
</span><span class='line'>After=getty.target
</span><span class='line'>
</span><span class='line'>[Service]
</span><span class='line'>Type=oneshot
</span><span class='line'>ExecStart=/usr/bin/bash -c "echo 2 &gt; /sys/module/hid_apple/parameters/fnmode"
</span><span class='line'>
</span><span class='line'>[Install]
</span><span class='line'>WantedBy=multi-user.target</span></code></pre></td></tr></table></div></figure>


<p>然后enable/start fnkey.service。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo systemctl enable fnkey
</span><span class='line'>#sudo systemctl start fnkey</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[做一天的你]]></title>
    <link href="http://shanexu.org/blog/2013/04/24/zuo-yi-tian-de-ni/"/>
    <updated>2013-04-24T20:22:00+08:00</updated>
    <id>http://shanexu.org/blog/2013/04/24/zuo-yi-tian-de-ni</id>
    <content type="html"><![CDATA[<blockquote><p>不想不想再被你看轻<br/>可是我始终还不够聪明<br/>在你面前不敢表现不高兴<br/>不想不想爱被看清<br/>然而决定总是不够坚定<br/>狠不下心不懂对你任性<br/>为何付出的心都得不到回应<br/>一切努力都是零<br/>多么可惜我还分得清<br/>这是同情不是感情</p><p>我只要做一天的你<br/>让我用一天你的表情<br/>了解你的心情<br/>永远受欢迎<br/>带一点烦恼的高兴<br/>只要你做一天的我<br/>让你过一天我的心情<br/>耗尽所有热情所有决心<br/>还被你否定<br/>是多么不公平</p><p>不想不想爱被看清<br/>然而决定总是不够坚定<br/>狠不下心不懂对你任性<br/>为何付出的心都得不到回应<br/>一切努力都是零<br/>多么可惜我还分得清<br/>这是同情不是感情<br/>我只要做一天的你<br/>让我用一天你的表情<br/>了解你的心情<br/>永远受欢迎<br/>带一点烦恼的高兴<br/>只要你做一天的我<br/>让你过一天我的心情<br/>耗尽所有热情所有决心<br/>还被你否定<br/>是多么不公平</p><p>我只要做一天的你<br/>让我用一天你的姓<br/>让我疲倦的心<br/>能和你合并<br/>就算是最虚荣的梦境<br/>只要你做一天的我<br/>让你过一天我的心情<br/>耗尽所有热情所有决心<br/>还被你否定<br/>是多么不公平</p></blockquote>




<div class="begin-indent2em"></div>


<p>在微信的朋友圈看到了友人分享的歌曲，想起这首虐心的歌了。想起曾经用复读机反复听着Jolin的歌的时候，想起那段偶有烦恼但是只要睡一觉一切问题都能解决的年少时光。今天下午又去做了无聊的事情，明明自己完全不想去，却还要煞费苦心从家里跑过去，同时还要被百度地图忽悠一把，最后还要在没有大排饭的沙县里面吃鸭腿饭。现在的我是处在，人生的最低谷，还是已经没有办法救赎了呢。今天的我，竟然踏进了久违的书店，书页发出的胶水味道原来是如此的温馨。双手接触到书本的时候我竟然会有那么微微的感动，我感到身体里有什么东西发酵了或者腐烂。</p>

<p>我啊完全在浪费时间吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[赐予我王冠，给予我试炼]]></title>
    <link href="http://shanexu.org/blog/2013/04/13/ci-yu-wo-wang-guan-%2Cgei-yu-wo-shi-lian/"/>
    <updated>2013-04-13T19:43:00+08:00</updated>
    <id>http://shanexu.org/blog/2013/04/13/ci-yu-wo-wang-guan-,gei-yu-wo-shi-lian</id>
    <content type="html"><![CDATA[<div class='begin-indent2em' filter='p:not(:has(a.fancybox :first-child))'></div>


<p>我觉得标题很好。</p>

<p>我不知道这个标题是不是我自己原创的。我一直觉得这个标题是我有次在梦醒的时候拾获的，但是有时候又觉得是在某次逛论坛的时候看到的。总之，看到这句话的时候，稍稍对自己的生活产生了一点信心。那时候我把这句话和某个人分享，破天荒地得到了赏识。</p>

<p><em>罪恶王冠</em>，可以说是我开始工作以来，追的第一部动漫。追动漫这种事情，以前在学校里是极少发生的，大部分时候我都是等动漫完结了，直接一口气看上一天看完的。真正有映像追过的番，竟然是<em>半价便当争夺战</em>。</p>

<p>最初追罪恶王冠可能真的只是因为那个猎奇的开头，以及集为了祈不过一切的样子（第四话最后的拔剑情景我不知道看了多少回），还有最重要的东西，chelly的歌，我几乎从来没有跳过前12话的ED，Departures。</p>

<blockquote><p>已不被你所愛<br/>也不被你所需<br/>就這樣我成了孤單一人<br/>那時你說了些什麼呢？<br/>無法傳達的言語漫天飛舞著<br/>明明知道<br/>但今天仍許下無法實現的願望</p><p>不要離開我<br/>請緊緊握住我的手<br/>說出你我兩人會持續下去<br/>握住的手是如此溫暖<br/>如此溫柔</p><p>你總是那樣<br/>讓我生氣讓我哭泣<br/>只是那之後<br/>你那帶著歉意的表情<br/>我好喜歡</p><p>不要離開我<br/>緊緊地盡情地抱著我<br/>想在你的雙臂中<br/>兩人臉貼著臉入眠</p><p>你已知我們不會再見面了嗎？</p><p>不要離開我<br/>緊緊地抱著我我喜歡著你<br/>就不能再一次對我微笑嗎<br/>在你的溫存消失前<br/>請抱緊我</p></blockquote>


<p>ED的画面再次出现在我的眼前，祈慢慢地一步一步向前走着，在我第一次看到这个ed的时候我就想起了凌波女神那在月光下的湖面上投射下的漫步的声影。只不同的是，凌波女神更为矜持，她永远只给我看了那个孤单的身影。</p>

<p>GC和EVA在某种意义上真的很像。Apocalypse病毒，失落的圣诞节，亚当夏娃，GC里放着那么几个意义清晰的宗教名词，还有人类进化这个大主题。但是GC就是GC，永远无法变成EVA，我并不没有贬低GC的意思，毕竟EVA永远是一座丰碑，是一座难以逾越的山峰。尽管GC有着宗教成分、进化的噱头，然而他们想诠释的主题是不一样。比如主角，樱满集是一个温柔的人，是一个温柔的王，尤其是在后期，完成从一个温柔的男孩到温柔的男人的蜕变，并且在他的温柔中甚至还融入了果敢。然而EVA中的碇真嗣却只能用懦弱来概括。樱满集能够肩负整个世界的命运，而真嗣却只会说“救救我”。</p>

<iframe height=498 width=510 src="http://player.youku.com/embed/XNTc2ODk5OTI4" frameborder=0 allowfullscreen></iframe>


<p>后面几话的时候<em>こゑだ</em>和<em>chelly</em>调换了下，总觉得<em>chelly</em>的声线不适合唱快歌，然而直到最后一话的时候终于喜欢上了op2。</p>

<hr />

<p>距离上面的内容大概已经过了10天了，昨天看了<em>EVA Q</em>，趁着这个新鲜劲把EVA和GC的这篇文章写完吧。</p>

<p>GC永远成不了EVA这样的神作。也许今年来的动画华的作品大多取自轻小说的缘故，好多番基本上都是以烂尾结束的，结局较为满意的就只有《中二病也要谈恋爱》和《K》，但是一个是将原作完全改的面目全非，另一个则是完全是一个全新的运作模式（「K」是以革新作家集团「GoRA」的7名匿名作家的小说为原著，动画公司GoHands制作的原创TVA动画。）。严格意义上GC也是用了类似《K》的做法，但似乎完全没有把握好一个度。以下是我对GC的一点吐槽。</p>

<p>首先，能出发剧情的人物太多。达利安少爷竟然和鸫两个人能够触发剧情，路边的镰刀妹子竟然会来护驾，这段剧情不禁让我想起新加坡版的神雕侠侣中的路人道士（混蛋，你竟然欺负一个断了手臂又要护着伤者的小伙子。）。然后达利安和鸫的Flag都立好了，又没有下文了。嘘介少佐这么有个性并且有如此头脑的人物的历史却完全没有展开。然而那个Apocalypse病毒还有Daath（什么生物进化意志）的事情也没说清。也许有人说EVA也很多事情没有解释，然而EVA整整花了两话的时间再加上全程剧透的方式，在真相上套了一层加一层的面纱，以致于最后都可以拿着这个谜团污钱的境地了。然而GC却在这点上远远没有EVA这么成功，虽然也有一话的回忆，却在解释完完全全的两件事情，直到最后的最后，甚至只能靠莫名奇妙的话语来搪塞观众，也许是本人智商问题吧，总之，今天也遭受了一点点智商上的挑战。</p>

<p>EVA成功的另一个原因可能是不急于铺成剧情的发展，而是积极地去探讨人性，或者说是积极地去挖掘主角的黑历史。再者，或者EVA更懂得如何抓住观众的心，记得TV版第一话的时候，凌波女神的莫名其妙的闪现，只是那么一个简单到那么微不足道的场景已经让我被这个剧吸引住了。然而在GC则需要chelly的歌声配合猎奇的葬仪社的MV才能差不多达到相同的效果。也许近年来看动漫的人的低龄化趋势和观众文化程度的降低趋势，再加上没有绝好的脚本编剧的支持，总之今年来的动漫鲜有佳作。</p>

<p>然而，尽管GC存在着各种各样的吐槽点。甚至在B站能看到谩骂，但是我还是觉得这是一部近来鲜有的佳作。值得慢慢回味。比如，祭死去的那一段。</p>

<blockquote><p>集，有个叫《善良国王》的绘本，你看过吗？里面的国王，很善良的。他把自己的钱和分给大家，土地也让给大家，最后，国家就不复存在了。虽然大家都对国王很生气，但是我还是很喜欢那个国王。大概，他就是我的初恋吧。集，你很像那个国王，虽然善良让他一无所有。我，觉得集一定会成为一个好国王，所以……集……真好……能把我的……给集……</p></blockquote>

<p>这一段很虐心，为了记录下上面这段文字，我又重温了这个场景。</p>

<p>当然最后一话也是看了多遍才体会到其中的意境，集说的那句“即便是恨着我的人，也是在爱中诞生的。”所以集的虚空之力才是，包容一切的能力，集在最后应验了祭的期许，成为了一个好国王。</p>

<p>我的那么点关于GC的断想，也就此打住吧。</p>

<p>最后的最后还是让我用自己的那句话给自己打打气吧。</p>

<blockquote><p>赐予我王冠，给予我试炼。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tranquil-mode]]></title>
    <link href="http://shanexu.org/blog/2013/04/12/tranquil-mode/"/>
    <updated>2013-04-12T16:22:00+08:00</updated>
    <id>http://shanexu.org/blog/2013/04/12/tranquil-mode</id>
    <content type="html"><![CDATA[<div class='begin-indent2em' filter='p:not(:has(a.fancybox :first-child))'></div>


<p>前面几篇写tiling window manager的文章里提到了，xnomad这个在os x下极端好用的窗口管理器，这个窗口管理器是用tranquil这个语言写的。目前<a href="https://github.com/fjolnir/tranquil">tranquil</a>这门语言还只是在github上的一个项目。</p>

<blockquote><p>Tranquil is a programming language built on top of LLVM &amp; the Objective-C Runtime.
It aims to provide a more expressive &amp; easy to use way to write Mac and iOS Apps.</p></blockquote>

<p>Tranquil是一门基于LLVM和Objective-C runtime的编程语言，其目的在与提供一种更具表现力的和方便的方法来编写Mac应用和IOS Apps。</p>

<p>作者在他的repository里只提供了vim的语法高亮插件，于是只能自己去写一个emacs的mode，于是通过看elisp手册，emacswiki以及阅读js.el和ruby-mode.el，加上不断的google，还有[\C-h f]终于写出了我自己的勉强还能用的<a href="https://github.com/shanexu/tranquil-mode">tranquil-mode</a>。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(add-to-list 'load-path "~/path/to/tranquil-mode/")
</span><span class='line'>(require 'tranquil-mode)</span></code></pre></td></tr></table></div></figure>


<p><img src="http://50.116.59.228/shanexu.org/images/tranquil-mode.png" title="tranquil-mode" alt="tranquil-mode"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[It's because of you, motherfucker, that we are not all using Lisp.]]></title>
    <link href="http://shanexu.org/blog/2013/04/09/its-because-of-you/"/>
    <updated>2013-04-09T00:37:00+08:00</updated>
    <id>http://shanexu.org/blog/2013/04/09/its-because-of-you</id>
    <content type="html"><![CDATA[<iframe width="560" height="315" src="http://www.youtube.com/embed/bzkRVzciAZg" frameborder="0" allowfullscreen></iframe>


<h2>Transcript</h2>

<p>And in conclusion, we have found Apache to be excellent server for our web applications. Any questions?</p>

<p><em>Yes. I have a question. Why didn&rsquo;t you use Node.js. Node.js is an event driven non-blocking IO server, that can be used to build high performance web applications.</em></p>

<p>That is an excellent question. We evaluated several alternative web servers, and concluded that, while options like Node.js are very interesting, Apache meets our needs and has a solid track record.</p>

<p><em>But it doesn&rsquo;t have performance. Everybody knows that Apache applications are slow, because they use blocking IO and have context switches.</em></p>

<p>That&rsquo;s a commonly held belief, that threaded web servers are somehow less performant or scalable than event based servers. If fact, if you measure carefully, you&rsquo;ll find that both models have similar performance charasteristics.</p>

<p><em>Threads don&rsquo;t scale, simple as that.</em></p>

<p>That may have been true 10 years ago, it&rsquo;s not true today.</p>

<p><em>Node.js will run circles around Apache, because Apache was build before async was discovered.</em></p>

<p>This is where I&rsquo;d typically stab myself repeatedly in the ears with a fork until I stop hearing you.</p>

<p>I&rsquo;ve looked at Node. It uses a single threaded loop that dispatches events to handlers. It&rsquo;s a proven model that solves some concurrency problems, but at the cost of code complexity.</p>

<p><em>It gives techies like me the control, to wring every last CPU cycle out of our servers.</em></p>

<p>it must feel empowering to be totally responsible to the performance of your application. To be always on the lookout for blocking operations that should be split into little pieces each perfectly tailored to optimize concurrent throughput, all the complexities of assembler with the efficiencies of JavaScript</p>

<p><em>I&rsquo;m a total speed junky.</em></p>

<p>Do you know what this reminds me?</p>

<p><em>The invention of the transistor.</em></p>

<p>It reminds me the invention of threads. Threading libraries do exactly what you are doing manually. They break up pieces of code to be executed intermittently, switching from instruction that are waiting on IO, to instructions that are ready to run. But your sequential code stays intact. You may recall sequential code. That&rsquo;s the code you can read.</p>

<p><em>But it&rsquo;s slow as a dog.</em></p>

<p>Your async program is like something from the 19th century Gothic horror story, drunk with your own sense of power, you reassemble pieces of code that were once coherent, stitching them together with event loops and call-back functions, until your monster, grotesque and menacing, is ready to be brought to life in a JavaScript VM. You throw the switch and the hideous creatures awakes, rises, and lurches forward, you simultaneously elated and terrified that something so unnatural could work at all. When you realized what you&rsquo;ve unleashed, the pure immorality of it, your creation reaches out with its bloodied mangled arms and strangles you.</p>

<p><em>But it&rsquo;s fast as hell.</em></p>

<p>If you are willing to suffer complex code for performance, why not write an Nginx module in C?</p>

<p><em>Node.js is the most bad ass rock star tech to come out, since Ruby on Rails.</em></p>

<p>As much as I want to be optimistic and look forward to human progress, people like you stop me dead in my tracks. You are fanatic in the church of technology fashion. I could present you with fact after fact after fact that your thinking about asynchronous programing is completely wrong, but why bother when you equate technology to rock bands, fancy yourself a software hipster by wearing your Node T-shirt and celebrate horrible code. Maybe you&rsquo;re cool. Hell, maybe you have groupies, but when it comes to knowing what the fuck you are talking about, you have all facilities of a parrot that says non-blocking, over and over again.</p>

<p><em>Non-blocking, is the secret in the async sauce. With it, you go fast, without it, you go slow.</em></p>

<p>Do you know when human discovered that the world is round?</p>

<p><em>1492, Columbus sailed the ocean blue.</em></p>

<p>It was 240 BC, by a Greek mathematician named Eratosthenes. He conducted a simple experiment using the length of shadows and the distance between cities, to not only prove the earth is round, but also calculated its circumference.</p>

<p><em>Sounds low-tech.</em></p>

<p>It was utterly brilliant. But somehow, for one and half millennia, it was common knowledge that the world was flat, hundreds and hundreds and hundreds years of raft ignorance. How in motherfucking hell does this happen?</p>

<p>It was you. You, who made claims about thread performance without measuring. You, who claimed hacking your code with a machete, turning it inside out into a twisted unrecognizable mass will somehow make it go faster. You, who spend your time alternating between problems that are already solved, and problems that don&rsquo;t actually exist.</p>

<p>You are the reason that science was set back a thousand years. The reason we&rsquo;ve not cured cancer. The reason we&rsquo;ve not solved world hunger.</p>

<p>It&rsquo;s because of you, motherfucker, that we are not all using Lisp.</p>

<p><em>I&rsquo;m sorry, what was the last part again?</em></p>

<p>Nevermind.</p>

<p><em>Did you just say Lisp?</em></p>

<p>You misheard me.</p>

<p><em>I could&rsquo;ve sworn you just said Lisp.</em></p>

<p>If there are no other questions, this concludes my presentation.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vimperator]]></title>
    <link href="http://shanexu.org/blog/2013/04/08/vimperator/"/>
    <updated>2013-04-08T22:07:00+08:00</updated>
    <id>http://shanexu.org/blog/2013/04/08/vimperator</id>
    <content type="html"><![CDATA[<div class='begin-indent2em' filter='p:not(:has(a.fancybox :first-child))'></div>


<p>我曾经说过Firefox是不可替代的，那是因为Firefox上有那么几个插件我无法割舍的，比如firebug，再入autoproxy，然后我想说的就是我用了数年之久的Vimperator。</p>

<p>心情不好的时候我会自虐般的用一下这个命令</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>:set toolbars=none</span></code></pre></td></tr></table></div></figure>


<p><img src="http://50.116.59.228/shanexu.org/images/vimperator.png" title="Firefox with Vimperator" alt="Firefox with Vimperator"></p>

<p>于是世界清净了。</p>

<p>这里就给一张Vimperator的Cheat Sheet。</p>

<div class="flash-video"><div><iframe width="510" height="498" frameborder="0" allowfullscreen="" src="http://sheet.shiar.nl/vimperator"></iframe></div></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tiling Window Manager (4)]]></title>
    <link href="http://shanexu.org/blog/2013/04/08/tiling-window-manager-4/"/>
    <updated>2013-04-08T20:42:00+08:00</updated>
    <id>http://shanexu.org/blog/2013/04/08/tiling-window-manager-4</id>
    <content type="html"><![CDATA[<div class='begin-indent2em' filter='p:not(:has(a.fancybox :first-child))'></div>


<p>没想到这个系列竟然能够写到第四篇，我真的对自己的人生到底有多么无聊已经无法掌控了。</p>

<p>就在我对在os x下使用tiling window manager绝望，并且用macruby写了一段还算能用的又臭又长又丑陋的脚本的时候我在github的角落里发现了osxmonad。在过去的六个月里，我竟然没有想到过把os x和xmonad两个单词结合起来，可想那过去的几个月无脑的人生有多么悲惨。</p>

<p>osxmonad其实已经可以满足日常需要了，但是那个焦点管理的确有时候会影响心情，毕竟macbook的触摸板还是非常好用的（这半年里我几乎没有碰过鼠标，现在我多年的鼠标手已经消失了），时而会手贱会用触摸板切换窗口焦点。然后当我输入第一个字母的时候，焦点就被转移到了某个osxmonad计算出的焦点，也就是会强制使我想输入文字的窗口失去焦点。</p>

<p>但是你永远不知道下一秒会发生什么，一个错误会让你痛恨一生，但是有时候一个错误也能造就一段美丽的佳话。你永远不会想到，你输了一百多遍的单词xmonad有一天会不小心输成了xnomad，然后你习惯性的按下了回车键，接着google非常谦卑地帮你去搜索了xnomad，他甚至还小心翼翼的问你是不是要找xmonad，不过等等，把我的狗眼往下稍微移一移，你会看到在github上竟然有这么一个神奇的项目，<a href="https://github.com/fjolnir/xnomad">xnomad</a>。</p>

<p>于是这就是我要的人生了吗？</p>

<p><img src="http://50.116.59.228/shanexu.org/images/tiling-4-1.png" title="Mountain Lion with xnomad, tall layout" alt="Mountain Lion with xnomad, tall layout"></p>

<p><img src="http://50.116.59.228/shanexu.org/images/tiling-4-2.png" title="Mountain Lion with xnomad, tall layout with more windows" alt="Mountain Lion with xnomad, tall layout with more windows"></p>

<p><img src="http://50.116.59.228/shanexu.org/images/tiling-4-3.png" title="Mountain Lion with xnomad wide layout" alt="Mountain Lion with xnomad wide layout"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tiling Window Manager (3)]]></title>
    <link href="http://shanexu.org/blog/2013/04/08/tiling-window-manager-3/"/>
    <updated>2013-04-08T13:20:00+08:00</updated>
    <id>http://shanexu.org/blog/2013/04/08/tiling-window-manager-3</id>
    <content type="html"><![CDATA[<div class='begin-indent2em' filter='p:not(:has(a.fancybox :first-child))'></div>


<p>在我对在os x下使用平铺式窗口管理器差不多快绝望的时候，我在github上竟然发现<a href="https://github.com/xmonad/osxmonad.git">osxmonad</a>这个项目。来我们重温那句话。</p>

<blockquote><p>I would die for XMonad working with native OSX windows. Interested in any answers beyond the crappy things I&rsquo;ve seen already.</p></blockquote>

<p>后来看了下，这个comment是在2011年的时候发布的，而osxmonad则开始于9个月前。好吧不知道这个老兄现在知不知道这个东西的存在。好吧现在来说说osxmonad的安装方法吧。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/xmonad/osxmonad.git
</span><span class='line'>darcs get http://code.haskell.org/xmonad
</span><span class='line'>cd xmonad
</span><span class='line'>darcs apply ../osxmonad/xmonad.patch
</span><span class='line'>cabal install "X11 &gt;=1.5 && &lt;1.7"
</span><span class='line'>cabal configure
</span><span class='line'>cabal install
</span><span class='line'>cd ../osxmonad
</span><span class='line'>cabal configure
</span><span class='line'>cabal install</span></code></pre></td></tr></table></div></figure>


<p>以上是github上提供的安装方法。作者是对xmonad-1.0.1版本进行了补丁，而到目前为止，xmonad已经发布了1.1版本，所以作者的path无法在1.1版本的xmonad上上使用。然后看了看path文件，大概明白了补丁的意思。于是在XMonad/Core.hs的源代码的465行加上&#8221;-framework&#8221;,&ldquo;Cocoa&#8221;编译选项，同时修改osxmonad/osxmonad.cabal的24行将xmonad的版本号改成0.11，就能按照上面的步骤编译安装了，当然ghc要从haskell的官网上下载haskel platform。</p>

<p>然后编写xmonad的配置文件~/.xmonad/xmonad.hs</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='haskell'><span class='line'><span class="kr">import</span> <span class="nn">XMonad</span>
</span><span class='line'><span class="kr">import</span> <span class="nn">OSXMonad.Core</span>
</span><span class='line'>
</span><span class='line'><span class="nf">main</span> <span class="ow">=</span> <span class="n">osxmonad</span> <span class="n">defaultConfig</span> <span class="p">{</span>
</span><span class='line'>         <span class="n">modMask</span> <span class="ow">=</span> <span class="n">mod1Mask</span> <span class="o">.|.</span> <span class="n">mod4Mask</span><span class="p">,</span>
</span><span class='line'>         <span class="n">keys</span> <span class="ow">=</span> <span class="n">osxKeys</span>
</span><span class='line'>       <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>最后运行xmonad。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='haskell'><span class='line'><span class="o">~/</span><span class="kt">Library</span><span class="o">/</span><span class="kt">Haskell</span><span class="o">/</span><span class="n">bin</span><span class="o">/</span><span class="n">xmonad</span>
</span></code></pre></td></tr></table></div></figure>


<p>于是我终于在os x下用上了好久没有（其实我有时候会偷跑到linux下去爽几下）使用的XMonad。当然osxmonad还远远不能说完美，比如反应滞后，窗口焦点只能在自己的机制下维护。但是，够用了。</p>

<p><img src="http://50.116.59.228/shanexu.org/images/tiling-3.png" title="Mountain Lion with osxmonad" alt="Mountain Lion with osxmonad"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tiling Window Manager (2)]]></title>
    <link href="http://shanexu.org/blog/2013/04/07/tiling-window-manager-2/"/>
    <updated>2013-04-07T22:46:00+08:00</updated>
    <id>http://shanexu.org/blog/2013/04/07/tiling-window-manager-2</id>
    <content type="html"><![CDATA[<div class="begin-indent2em"></div>


<p>OS X下有这么几款窗口管理器，好吧，严格意义上OS X没有什么窗口管理器这种东西，其实有的只是辅助性的工具，比如SizeUp能够用快捷键把窗口放到左半屏，上半屏，四分之一屏，移动窗口等等，然后收费，其实也是可以免费用的，只是过段时间会弹出对话框。然后，<a href="http://www.tylerwm.com/">Tyler</a>，这货其实是很像XMonad的，尤其是看完了他的演示视频。但是</p>

<blockquote><p>Not currently compatible with Mountain Lion. We are working on an update.</p></blockquote>

<p>好吧我没法用。</p>

<p>在搜索tiling window manager for os x的时候我在github上看到了<a href="https://github.com/jigish/slate">slate</a>。slate的功能其实和SizeUp很相近。然而最近这个项目有了很大的突破，比如layout、javascript config file的引入，但是还是没有XMonad带给我体验，我仍旧需要记住有一大堆快捷键，然后用快捷键手动设置每一个窗口的大小。</p>

<p>于是我冒出了一个想法，要不我自己来写一个窗口管理器吧。于是我clone了slate代码下来仔细研读。而事实是，我不太会用Objective-C，我对OC的认识，也差不多仅限于差不多能读懂代码罢了。还好这个世界上有个macruby的东西</p>

<blockquote><p>MacRuby is an implementation of Ruby 1.9 directly on top of Mac OS X core technologies such as the Objective-C runtime and garbage collector, the LLVM compiler infrastructure and the Foundation and ICU frameworks. It is the goal of MacRuby to enable the creation of full-fledged Mac OS X applications which do not sacrifice performance in order to enjoy the benefits of using Ruby.</p></blockquote>

<p>于是我写了这么一个没啥大用的脚本。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># -*- coding: utf-8 -*-</span>
</span><span class='line'><span class="n">framework</span> <span class="s2">&quot;AppKit&quot;</span>
</span><span class='line'><span class="n">framework</span> <span class="s2">&quot;CoreGraphics&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;logger&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="k">module</span> <span class="nn">RMonad</span>
</span><span class='line'>  <span class="nb">self</span><span class="o">.</span><span class="n">instance_eval</span> <span class="k">do</span>
</span><span class='line'>    <span class="vi">@logger</span> <span class="o">=</span> <span class="no">Logger</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">STDOUT</span><span class="p">)</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">logger</span>
</span><span class='line'>      <span class="vi">@logger</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="nc">RMonadWorkspace</span>
</span><span class='line'>    <span class="kp">attr_accessor</span> <span class="ss">:windows</span>
</span><span class='line'>    <span class="kp">attr_accessor</span> <span class="ss">:layout</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">initialize</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="nc">HLayout</span>
</span><span class='line'>    <span class="kp">attr_accessor</span> <span class="ss">:frames</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">w</span><span class="p">,</span><span class="n">h</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@w</span><span class="p">,</span> <span class="vi">@h</span><span class="o">=</span><span class="n">w</span><span class="p">,</span><span class="n">h</span>
</span><span class='line'>      <span class="vi">@frames</span><span class="o">=[]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">swap_next</span><span class="p">(</span><span class="n">win</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">if</span> <span class="vi">@frames</span><span class="o">.</span><span class="n">count</span> <span class="o">&lt;=</span> <span class="mi">1</span>
</span><span class='line'>      <span class="n">index</span> <span class="o">=</span> <span class="vi">@frames</span><span class="o">.</span><span class="n">index</span><span class="p">{</span><span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">win</span><span class="o">.</span><span class="n">id</span> <span class="o">==</span> <span class="n">win</span><span class="o">.</span><span class="n">id</span><span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">index</span>
</span><span class='line'>        <span class="n">frame</span> <span class="o">=</span> <span class="vi">@frames</span><span class="o">[</span><span class="n">index</span><span class="o">]</span>
</span><span class='line'>        <span class="n">frame_next</span> <span class="o">=</span> <span class="vi">@frames</span><span class="o">[</span><span class="p">(</span><span class="n">index</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="sx">%@frames.count]</span>
</span><span class='line'><span class="sx">        frame.win, frame_next.win = frame_next.win, frame.win</span>
</span><span class='line'><span class="sx">      end</span>
</span><span class='line'><span class="sx">    end</span>
</span><span class='line'>
</span><span class='line'><span class="sx">    def swap_prev(win)</span>
</span><span class='line'><span class="sx">      return if @</span><span class="n">frames</span><span class="o">.</span><span class="n">count</span> <span class="o">&lt;=</span> <span class="mi">1</span>
</span><span class='line'>      <span class="n">index</span> <span class="o">=</span> <span class="vi">@frames</span><span class="o">.</span><span class="n">index</span><span class="p">{</span><span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">win</span><span class="o">.</span><span class="n">id</span> <span class="o">==</span> <span class="n">win</span><span class="o">.</span><span class="n">id</span><span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">index</span>
</span><span class='line'>        <span class="n">frame</span> <span class="o">=</span> <span class="vi">@frames</span><span class="o">[</span><span class="n">index</span><span class="o">]</span>
</span><span class='line'>        <span class="n">frame_prev</span> <span class="o">=</span> <span class="vi">@frames</span><span class="o">[</span><span class="p">(</span><span class="n">index</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="sx">%@frames.count]</span>
</span><span class='line'><span class="sx">        frame.win, frame_prev.win = frame_prev.win, frame.win</span>
</span><span class='line'><span class="sx">      end</span>
</span><span class='line'><span class="sx">    end</span>
</span><span class='line'>
</span><span class='line'><span class="sx">    def swap_main(win)</span>
</span><span class='line'><span class="sx">      return if @</span><span class="n">frames</span><span class="o">.</span><span class="n">count</span> <span class="o">&lt;=</span> <span class="mi">1</span>
</span><span class='line'>      <span class="n">index</span> <span class="o">=</span> <span class="vi">@frames</span><span class="o">.</span><span class="n">index</span><span class="p">{</span><span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">win</span><span class="o">.</span><span class="n">id</span> <span class="o">==</span> <span class="n">win</span><span class="o">.</span><span class="n">id</span><span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">index</span>
</span><span class='line'>        <span class="n">frame</span> <span class="o">=</span> <span class="vi">@frames</span><span class="o">[</span><span class="n">index</span><span class="o">]</span>
</span><span class='line'>        <span class="n">frame_main</span> <span class="o">=</span> <span class="vi">@frames</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>        <span class="n">frame</span><span class="o">.</span><span class="n">win</span><span class="p">,</span> <span class="n">frame_main</span><span class="o">.</span><span class="n">win</span> <span class="o">=</span> <span class="n">frame_main</span><span class="o">.</span><span class="n">win</span><span class="p">,</span> <span class="n">frame</span><span class="o">.</span><span class="n">win</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">main</span>
</span><span class='line'>      <span class="vi">@frames</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">win</span> <span class="k">if</span> <span class="vi">@frames</span><span class="o">.</span><span class="n">count</span> <span class="o">&gt;=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">prev</span><span class="p">(</span><span class="n">win</span><span class="p">)</span>
</span><span class='line'>      <span class="n">index</span> <span class="o">=</span> <span class="vi">@frames</span><span class="o">.</span><span class="n">index</span><span class="p">{</span><span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">win</span><span class="o">.</span><span class="n">id</span> <span class="o">==</span> <span class="n">win</span><span class="o">.</span><span class="n">id</span><span class="p">}</span>
</span><span class='line'>      <span class="vi">@frames</span><span class="o">[</span><span class="p">(</span><span class="n">index</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="sx">%@frames.count].win if index</span>
</span><span class='line'><span class="sx">    end</span>
</span><span class='line'><span class="sx">    </span>
</span><span class='line'><span class="sx">    def next(win)</span>
</span><span class='line'><span class="sx">      index = @</span><span class="n">frames</span><span class="o">.</span><span class="n">index</span><span class="p">{</span><span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">win</span><span class="o">.</span><span class="n">id</span> <span class="o">==</span> <span class="n">win</span><span class="o">.</span><span class="n">id</span><span class="p">}</span>
</span><span class='line'>      <span class="vi">@frames</span><span class="o">[</span><span class="p">(</span><span class="n">index</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="sx">%@frames.count].win if index</span>
</span><span class='line'><span class="sx">    end</span>
</span><span class='line'>
</span><span class='line'><span class="sx">    def &lt;&lt;(win)</span>
</span><span class='line'><span class="sx">      if @</span><span class="n">frames</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>        <span class="vi">@frames</span> <span class="o">&lt;&lt;</span> <span class="no">Frame</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="vi">@w</span><span class="p">,</span><span class="vi">@h</span><span class="p">)</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">win</span><span class="p">)</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="n">frame1</span> <span class="o">=</span> <span class="vi">@frames</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">frame1</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>          <span class="n">w</span> <span class="o">=</span> <span class="vi">@frames</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">w</span> <span class="o">==</span> <span class="vi">@w</span> <span class="p">?</span> <span class="vi">@w</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span> <span class="p">:</span> <span class="vi">@w</span> <span class="o">-</span> <span class="vi">@frames</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">w</span>
</span><span class='line'>          <span class="n">h</span> <span class="o">=</span> <span class="vi">@h</span>
</span><span class='line'>          <span class="n">frame0</span> <span class="o">=</span> <span class="vi">@frames</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span>
</span><span class='line'>          <span class="n">frame0</span><span class="o">.</span><span class="n">w</span> <span class="o">=</span> <span class="vi">@w</span><span class="o">-</span><span class="n">w</span>
</span><span class='line'>          <span class="n">frame0</span><span class="o">.</span><span class="n">adjust</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>          <span class="n">w</span> <span class="o">=</span> <span class="n">frame1</span><span class="o">.</span><span class="n">w</span>
</span><span class='line'>          <span class="n">h</span> <span class="o">=</span> <span class="vi">@h</span> <span class="o">/</span> <span class="p">(</span><span class="n">count</span><span class="p">)</span><span class="o">.</span><span class="n">to_f</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>        <span class="vi">@frames</span> <span class="o">&lt;&lt;</span> <span class="no">Frame</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">)</span><span class="o">.</span><span class="n">add_not_resize</span><span class="p">(</span><span class="n">win</span><span class="p">)</span>
</span><span class='line'>        <span class="vi">@frames</span><span class="o">[</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">1</span><span class="o">].</span><span class="n">each_with_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="p">,</span> <span class="n">i</span><span class="o">|</span>
</span><span class='line'>          <span class="n">f</span><span class="o">.</span><span class="n">x</span><span class="p">,</span> <span class="n">f</span><span class="o">.</span><span class="n">y</span><span class="p">,</span> <span class="n">f</span><span class="o">.</span><span class="n">h</span> <span class="o">=</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="o">*</span><span class="n">i</span><span class="p">,</span> <span class="n">h</span>
</span><span class='line'>          <span class="n">f</span><span class="o">.</span><span class="n">adjust</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="vi">@frames</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">&gt;&gt;</span><span class="p">(</span><span class="n">win</span><span class="p">)</span>
</span><span class='line'>      <span class="n">index</span> <span class="o">=</span> <span class="vi">@frames</span><span class="o">.</span><span class="n">index</span><span class="p">{</span><span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">win</span><span class="o">.</span><span class="n">id</span> <span class="o">==</span> <span class="n">win</span><span class="o">.</span><span class="n">id</span><span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">index</span>
</span><span class='line'>        <span class="n">removed_frame</span> <span class="o">=</span> <span class="vi">@frames</span><span class="o">.</span><span class="n">delete</span> <span class="vi">@frames</span><span class="o">[</span><span class="n">index</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="k">if</span> <span class="vi">@frames</span><span class="o">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>        <span class="k">if</span> <span class="vi">@frames</span><span class="o">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">1</span>
</span><span class='line'>          <span class="vi">@frames</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">resize</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="vi">@w</span><span class="p">,</span><span class="vi">@h</span><span class="p">)</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>          <span class="vi">@frames</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">resize</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="n">removed_frame</span><span class="o">.</span><span class="n">w</span><span class="p">,</span> <span class="n">removed_frame</span><span class="o">.</span><span class="n">h</span><span class="p">)</span> <span class="k">if</span> <span class="n">index</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>          <span class="n">w</span><span class="o">=</span><span class="vi">@w</span><span class="o">-</span><span class="vi">@frames</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">w</span>
</span><span class='line'>          <span class="n">h</span><span class="o">=</span><span class="vi">@h</span><span class="o">/</span><span class="p">(</span><span class="vi">@frames</span><span class="o">.</span><span class="n">count</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">to_f</span>
</span><span class='line'>          <span class="vi">@frames</span><span class="o">[</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">1</span><span class="o">].</span><span class="n">each_with_index</span><span class="p">{</span><span class="o">|</span><span class="n">f</span><span class="p">,</span> <span class="n">i</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">resize</span><span class="p">(</span><span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="o">*</span><span class="n">i</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">)}</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">init_layout</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">if</span> <span class="vi">@frames</span><span class="o">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>      <span class="k">if</span> <span class="vi">@frames</span><span class="o">.</span><span class="n">count</span> <span class="o">==</span> <span class="mi">1</span>
</span><span class='line'>        <span class="vi">@frames</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">resize</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="vi">@w</span><span class="p">,</span><span class="vi">@h</span><span class="p">)</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="vi">@frames</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">resize</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="vi">@w</span><span class="o">/</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="vi">@h</span><span class="p">)</span>
</span><span class='line'>        <span class="n">w</span><span class="p">,</span><span class="n">h</span> <span class="o">=</span> <span class="vi">@w</span><span class="o">-</span><span class="vi">@frames</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">w</span><span class="p">,</span> <span class="vi">@h</span><span class="o">/</span><span class="p">(</span><span class="vi">@frames</span><span class="o">.</span><span class="n">count</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">to_f</span>
</span><span class='line'>        <span class="vi">@frames</span><span class="o">[</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="o">-</span><span class="mi">1</span><span class="o">].</span><span class="n">each_with_index</span><span class="p">{</span><span class="o">|</span><span class="n">f</span><span class="p">,</span> <span class="n">i</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">resize</span><span class="p">(</span><span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="o">*</span><span class="n">i</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">)}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">count</span>
</span><span class='line'>      <span class="vi">@frames</span><span class="o">.</span><span class="n">count</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">contains?</span><span class="p">(</span><span class="n">win</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="nc">Frame</span>
</span><span class='line'>    <span class="kp">attr_accessor</span> <span class="ss">:x</span><span class="p">,</span><span class="ss">:y</span><span class="p">,</span><span class="ss">:w</span><span class="p">,</span><span class="ss">:h</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">x</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">y</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">w</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">h</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@x</span><span class="p">,</span><span class="vi">@y</span><span class="p">,</span><span class="vi">@w</span><span class="p">,</span><span class="vi">@h</span> <span class="o">=</span> <span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">w</span><span class="p">,</span><span class="n">h</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">win</span>
</span><span class='line'>      <span class="vi">@win</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">win</span><span class="o">=</span><span class="p">(</span><span class="n">win</span><span class="p">)</span>
</span><span class='line'>      <span class="n">add</span><span class="p">(</span><span class="n">win</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">add_not_resize</span><span class="p">(</span><span class="n">win</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@win</span> <span class="o">=</span> <span class="n">win</span>
</span><span class='line'>      <span class="nb">self</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">add</span><span class="p">(</span><span class="n">win</span><span class="p">)</span>
</span><span class='line'>      <span class="n">win</span><span class="o">.</span><span class="n">position</span><span class="o">=</span><span class="p">{</span><span class="ss">x</span><span class="p">:</span><span class="vi">@x</span><span class="p">,</span> <span class="ss">y</span><span class="p">:</span><span class="vi">@y</span><span class="p">}</span>
</span><span class='line'>      <span class="n">win</span><span class="o">.</span><span class="n">size</span> <span class="o">=</span> <span class="p">{</span><span class="ss">w</span><span class="p">:</span><span class="n">w</span><span class="p">,</span> <span class="ss">h</span><span class="p">:</span><span class="n">h</span><span class="p">}</span>
</span><span class='line'>      <span class="vi">@win</span> <span class="o">=</span> <span class="n">win</span>
</span><span class='line'>      <span class="nb">self</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">adjust</span>
</span><span class='line'>      <span class="n">win</span><span class="o">.</span><span class="n">position</span><span class="o">=</span><span class="p">{</span><span class="ss">x</span><span class="p">:</span><span class="vi">@x</span><span class="p">,</span> <span class="ss">y</span><span class="p">:</span><span class="vi">@y</span><span class="p">}</span>
</span><span class='line'>      <span class="n">win</span><span class="o">.</span><span class="n">size</span> <span class="o">=</span> <span class="p">{</span><span class="ss">w</span><span class="p">:</span><span class="n">w</span><span class="p">,</span> <span class="ss">h</span><span class="p">:</span><span class="n">h</span><span class="p">}</span>
</span><span class='line'>      <span class="nb">self</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">resize</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">w</span><span class="p">,</span><span class="n">h</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@x</span><span class="p">,</span><span class="vi">@y</span><span class="p">,</span><span class="vi">@w</span><span class="p">,</span><span class="vi">@h</span> <span class="o">=</span> <span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">,</span><span class="n">w</span><span class="p">,</span><span class="n">h</span>
</span><span class='line'>      <span class="n">win</span><span class="o">.</span><span class="n">position</span><span class="o">=</span><span class="p">{</span><span class="ss">x</span><span class="p">:</span><span class="vi">@x</span><span class="p">,</span> <span class="ss">y</span><span class="p">:</span><span class="vi">@y</span><span class="p">}</span>
</span><span class='line'>      <span class="n">win</span><span class="o">.</span><span class="n">size</span> <span class="o">=</span> <span class="p">{</span><span class="ss">w</span><span class="p">:</span><span class="vi">@w</span><span class="p">,</span> <span class="ss">h</span><span class="p">:</span><span class="vi">@h</span><span class="p">}</span>
</span><span class='line'>      <span class="nb">self</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">class</span> <span class="nc">RMonadWindow</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">current_windows</span>
</span><span class='line'>      <span class="n">running_apps</span><span class="o">.</span><span class="n">inject</span><span class="p">(</span><span class="o">[]</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">wins</span><span class="p">,</span> <span class="n">app</span><span class="o">|</span>
</span><span class='line'>        <span class="nb">puts</span> <span class="n">app</span><span class="o">.</span><span class="n">localizedName</span>
</span><span class='line'>        <span class="n">ws</span> <span class="o">=</span> <span class="n">windows_of_app</span><span class="p">(</span><span class="n">app</span><span class="o">.</span><span class="n">processIdentifier</span><span class="p">)</span>
</span><span class='line'>        <span class="n">wins</span><span class="o">.</span><span class="n">concat</span> <span class="n">ws</span><span class="o">.</span><span class="n">inject</span><span class="p">(</span><span class="o">[]</span><span class="p">){</span><span class="o">|</span><span class="n">rws</span><span class="p">,</span> <span class="n">w</span><span class="o">|</span> <span class="n">rw</span> <span class="o">=</span> <span class="no">RMonadWindow</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">w</span><span class="p">);</span> <span class="n">rws</span> <span class="o">&lt;&lt;</span> <span class="n">rw</span> <span class="k">if</span> <span class="n">rw</span><span class="o">.</span><span class="n">title</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">rw</span><span class="o">.</span><span class="n">title</span><span class="o">.</span><span class="n">empty?</span><span class="p">;</span> <span class="n">rws</span><span class="p">}</span> <span class="k">if</span> <span class="n">ws</span>
</span><span class='line'>        <span class="n">wins</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">windows_of_app</span><span class="p">(</span><span class="n">pid</span><span class="p">)</span>
</span><span class='line'>      <span class="n">app</span><span class="o">=</span><span class="no">AXUIElementCreateApplication</span><span class="p">(</span><span class="n">pid</span><span class="p">)</span>
</span><span class='line'>      <span class="n">windows</span> <span class="o">=</span> <span class="no">Pointer</span><span class="o">.</span><span class="n">new_with_type</span><span class="p">(</span><span class="s2">&quot;^{__CFArray}&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">windows</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="k">if</span> <span class="no">AXUIElementCopyAttributeValues</span><span class="p">(</span><span class="n">app</span><span class="p">,</span> <span class="no">KAXWindowsAttribute</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="n">windows</span><span class="p">)</span> <span class="o">==</span> <span class="no">KAXErrorSuccess</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">running_apps</span>
</span><span class='line'>      <span class="n">app_arr</span> <span class="o">=</span> <span class="no">NSWorkspace</span><span class="o">.</span><span class="n">sharedWorkspace</span><span class="o">.</span><span class="n">runningApplications</span>
</span><span class='line'>      <span class="n">app_arr</span><span class="o">.</span><span class="n">each_with_index</span><span class="p">{</span><span class="o">|</span><span class="n">a</span><span class="p">,</span> <span class="n">i</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">. </span><span class="si">#{</span><span class="n">a</span><span class="o">.</span><span class="n">localizedName</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">current_app</span>
</span><span class='line'>      <span class="n">current_app</span> <span class="o">=</span> <span class="no">NSRunningApplication</span><span class="o">.</span><span class="n">currentApplication</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">axuelementref_window</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@axuelementref_window</span> <span class="o">=</span> <span class="n">axuelementref_window</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">title</span>
</span><span class='line'>      <span class="n">ptr</span> <span class="o">=</span> <span class="no">Pointer</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span>
</span><span class='line'>      <span class="n">ptr</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="k">if</span> <span class="no">AXUIElementCopyAttributeValue</span><span class="p">(</span><span class="vi">@axuelementref_window</span><span class="p">,</span> <span class="no">NSAccessibilityTitleAttribute</span><span class="p">,</span> <span class="n">ptr</span><span class="p">)</span><span class="o">==</span> <span class="no">KAXErrorSuccess</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">is_main</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">move</span><span class="p">(</span><span class="n">xy</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>      <span class="n">x</span><span class="o">=</span><span class="n">xy</span><span class="o">[</span><span class="ss">:x</span><span class="o">]||</span><span class="mi">0</span>
</span><span class='line'>      <span class="n">y</span><span class="o">=</span><span class="n">xy</span><span class="o">[</span><span class="ss">:y</span><span class="o">]||</span><span class="mi">0</span>
</span><span class='line'>      <span class="n">y</span><span class="o">+=</span><span class="mi">22</span>
</span><span class='line'>      <span class="n">cgpoint</span> <span class="o">=</span> <span class="no">Pointer</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">CGPoint</span><span class="o">.</span><span class="n">type</span><span class="p">)</span>
</span><span class='line'>      <span class="n">cgpoint</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="no">NSPoint</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">)</span>
</span><span class='line'>      <span class="n">position</span> <span class="o">=</span> <span class="no">AXValueCreate</span><span class="p">(</span><span class="no">KAXValueCGPointType</span><span class="p">,</span> <span class="n">cgpoint</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="no">AXUIElementSetAttributeValue</span><span class="p">(</span><span class="vi">@axuelementref_window</span><span class="p">,</span> <span class="no">NSAccessibilityPositionAttribute</span><span class="p">,</span> <span class="n">position</span><span class="p">)</span> <span class="o">==</span> <span class="no">KAXErrorSuccess</span>
</span><span class='line'>        <span class="kp">true</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="no">Rmond</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">axuelementref_window</span><span class="si">}</span><span class="s2"> could not move to position </span><span class="si">#{</span><span class="n">xy</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">position</span>
</span><span class='line'>      <span class="n">ptr</span> <span class="o">=</span> <span class="no">Pointer</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span>
</span><span class='line'>      <span class="n">pos_ptr</span> <span class="o">=</span> <span class="no">Pointer</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">NSPoint</span><span class="o">.</span><span class="n">type</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="no">AXUIElementCopyAttributeValue</span><span class="p">(</span><span class="vi">@axuelementref_window</span><span class="p">,</span> <span class="no">NSAccessibilityPositionAttribute</span><span class="p">,</span> <span class="n">ptr</span><span class="p">)</span> <span class="o">==</span> <span class="no">KAXErrorSuccess</span> <span class="ow">and</span> <span class="no">AXValueGetValue</span><span class="p">(</span><span class="n">ptr</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span> <span class="no">KAXValueCGPointType</span><span class="p">,</span> <span class="n">pos_ptr</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span><span class="ss">w</span><span class="p">:</span><span class="n">pos_ptr</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">x</span><span class="p">,</span> <span class="ss">h</span><span class="p">:</span><span class="n">pos_ptr</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">y</span><span class="p">}</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="no">Rmond</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">error</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">axuelementref_window</span><span class="si">}</span><span class="s2"> could not get position&quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">position</span><span class="o">=</span><span class="n">xy</span>
</span><span class='line'>      <span class="n">move</span><span class="p">(</span><span class="n">xy</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">size</span>
</span><span class='line'>      <span class="n">ptr</span> <span class="o">=</span> <span class="no">Pointer</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:id</span><span class="p">)</span>
</span><span class='line'>      <span class="n">size_ptr</span> <span class="o">=</span> <span class="no">Pointer</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">NSSize</span><span class="o">.</span><span class="n">type</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="no">AXUIElementCopyAttributeValue</span><span class="p">(</span><span class="vi">@axuelementref_window</span><span class="p">,</span> <span class="no">NSAccessibilitySizeAttribute</span><span class="p">,</span> <span class="n">ptr</span><span class="p">)</span> <span class="o">==</span> <span class="no">KAXErrorSuccess</span> <span class="ow">and</span> <span class="no">AXValueGetValue</span><span class="p">(</span><span class="n">ptr</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span> <span class="no">KAXValueCGSizeType</span><span class="p">,</span> <span class="n">size_ptr</span><span class="p">)</span>
</span><span class='line'>        <span class="p">{</span><span class="ss">w</span><span class="p">:</span><span class="n">size_ptr</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">width</span><span class="p">,</span> <span class="ss">h</span><span class="p">:</span><span class="n">size_ptr</span><span class="o">[</span><span class="mi">0</span><span class="o">].</span><span class="n">height</span><span class="p">}</span>
</span><span class='line'>      <span class="k">else</span>
</span><span class='line'>        <span class="p">{</span><span class="ss">w</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="ss">h</span><span class="p">:</span><span class="mi">0</span><span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">resize</span><span class="p">(</span><span class="n">wh</span><span class="p">)</span>
</span><span class='line'>      <span class="n">w</span><span class="o">=</span><span class="n">wh</span><span class="o">[</span><span class="ss">:w</span><span class="o">]||</span><span class="mi">0</span>
</span><span class='line'>      <span class="n">h</span><span class="o">=</span><span class="n">wh</span><span class="o">[</span><span class="ss">:h</span><span class="o">]||</span><span class="mi">0</span>
</span><span class='line'>      <span class="n">size_ptr</span> <span class="o">=</span> <span class="no">Pointer</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="no">NSSize</span><span class="o">.</span><span class="n">type</span><span class="p">)</span>
</span><span class='line'>      <span class="n">size_ptr</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="no">NSSize</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">)</span>
</span><span class='line'>      <span class="n">ptr_value</span> <span class="o">=</span> <span class="no">AXValueCreate</span><span class="p">(</span><span class="no">KAXValueCGSizeType</span><span class="p">,</span> <span class="n">size_ptr</span><span class="p">)</span>
</span><span class='line'>      <span class="k">unless</span> <span class="no">AXUIElementSetAttributeValue</span><span class="p">(</span><span class="vi">@axuelementref_window</span><span class="p">,</span> <span class="no">NSAccessibilitySizeAttribute</span><span class="p">,</span> <span class="n">ptr_value</span><span class="p">)</span> <span class="o">==</span> <span class="no">KAXErrorSuccess</span>
</span><span class='line'>        <span class="no">Rmond</span><span class="o">.</span><span class="n">logger</span><span class="o">.</span><span class="n">error</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="vi">@axuelementref_window</span><span class="si">}</span><span class="s2"> could not resize&quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">size</span><span class="o">=</span><span class="n">wh</span>
</span><span class='line'>      <span class="n">resize</span><span class="p">({</span><span class="ss">w</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="ss">h</span><span class="p">:</span><span class="mi">0</span><span class="p">})</span>
</span><span class='line'>      <span class="n">resize</span><span class="p">(</span><span class="n">wh</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后找个终端运行下面的代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">RMonand</span><span class="p">:</span><span class="ss">:RMonadWindow</span><span class="o">::</span><span class="n">current_windows</span><span class="o">.</span><span class="n">inject</span><span class="p">(</span><span class="ss">RMonad</span><span class="p">:</span><span class="ss">:HLayout</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="mi">1280</span><span class="p">,</span> <span class="mi">800</span><span class="o">-</span><span class="mi">22</span><span class="p">)){</span><span class="o">|</span><span class="n">l</span><span class="p">,</span> <span class="n">m</span><span class="o">|</span> <span class="n">l</span> <span class="o">&lt;&lt;</span> <span class="n">m</span><span class="p">;</span> <span class="n">l</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>就能把当前桌面上所有的窗口平铺开来。然后无奈的事情开始了。第一件事情，我如何能够得知当前的桌面是几号桌面。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">CGWindowListCopyWindowInfo</span><span class="p">(</span><span class="no">KCGWindowListOptionOnScreenOnly</span> <span class="o">|</span> <span class="no">KCGWindowListExcludeDesktopElements</span><span class="p">,</span> <span class="no">KCGNullWindowID</span><span class="p">)</span><span class="o">.</span><span class="n">select</span><span class="p">{</span><span class="o">|</span><span class="n">w</span><span class="o">|</span> <span class="o">!</span><span class="n">w</span><span class="o">[</span><span class="s1">&#39;kCGWindowOwnerName&#39;</span><span class="o">].</span><span class="n">empty?</span> <span class="o">&amp;&amp;</span> <span class="n">w</span><span class="o">[</span><span class="s2">&quot;kCGWindowLayer&quot;</span><span class="o">]==</span><span class="mi">0</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>这条语句能够得到当前桌面上的所有可见窗口的列表，运行结果形如下面所示，其实也就是一个hash的数组</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="p">{</span><span class="s2">&quot;kCGWindowLayer&quot;</span><span class="o">=&gt;</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;kCGWindowName&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;macirb — macruby — 181×48&quot;</span><span class="p">,</span> <span class="s2">&quot;kCGWindowMemoryUsage&quot;</span><span class="o">=&gt;</span><span class="mi">5544180</span><span class="p">,</span> <span class="s2">&quot;kCGWindowIsOnscreen&quot;</span><span class="o">=&gt;</span><span class="kp">true</span><span class="p">,</span> <span class="s2">&quot;kCGWindowSharingState&quot;</span><span class="o">=&gt;</span><span class="mi">1</span><span class="p">,</span> <span class="s2">&quot;kCGWindowOwnerPID&quot;</span><span class="o">=&gt;</span><span class="mi">52112</span><span class="p">,</span> <span class="s2">&quot;kCGWindowNumber&quot;</span><span class="o">=&gt;</span><span class="mi">15366</span><span class="p">,</span> <span class="s2">&quot;kCGWindowOwnerName&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;终端&quot;</span><span class="p">,</span> <span class="s2">&quot;kCGWindowStoreType&quot;</span><span class="o">=&gt;</span><span class="mi">2</span><span class="p">,</span> <span class="s2">&quot;kCGWindowBounds&quot;</span><span class="o">=&gt;</span><span class="p">{</span><span class="s2">&quot;Height&quot;</span><span class="o">=&gt;</span><span class="mi">772</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;X&quot;</span><span class="o">=&gt;</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;Width&quot;</span><span class="o">=&gt;</span><span class="mi">1277</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;Y&quot;</span><span class="o">=&gt;</span><span class="mi">26</span><span class="o">.</span><span class="mi">0</span><span class="p">},</span> <span class="s2">&quot;kCGWindowAlpha&quot;</span><span class="o">=&gt;</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">},</span> <span class="p">{</span><span class="s2">&quot;kCGWindowLayer&quot;</span><span class="o">=&gt;</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;kCGWindowName&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;&quot;</span><span class="p">,</span> <span class="s2">&quot;kCGWindowMemoryUsage&quot;</span><span class="o">=&gt;</span><span class="mi">3933468</span><span class="p">,</span> <span class="s2">&quot;kCGWindowIsOnscreen&quot;</span><span class="o">=&gt;</span><span class="kp">true</span><span class="p">,</span> <span class="s2">&quot;kCGWindowSharingState&quot;</span><span class="o">=&gt;</span><span class="mi">1</span><span class="p">,</span> <span class="s2">&quot;kCGWindowOwnerPID&quot;</span><span class="o">=&gt;</span><span class="mi">90225</span><span class="p">,</span> <span class="s2">&quot;kCGWindowNumber&quot;</span><span class="o">=&gt;</span><span class="mi">7682</span><span class="p">,</span> <span class="s2">&quot;kCGWindowOwnerName&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;Emacs&quot;</span><span class="p">,</span> <span class="s2">&quot;kCGWindowStoreType&quot;</span><span class="o">=&gt;</span><span class="mi">2</span><span class="p">,</span> <span class="s2">&quot;kCGWindowBounds&quot;</span><span class="o">=&gt;</span><span class="p">{</span><span class="s2">&quot;Height&quot;</span><span class="o">=&gt;</span><span class="mi">764</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;X&quot;</span><span class="o">=&gt;</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;Width&quot;</span><span class="o">=&gt;</span><span class="mi">1274</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;Y&quot;</span><span class="o">=&gt;</span><span class="mi">26</span><span class="o">.</span><span class="mi">0</span><span class="p">},</span> <span class="s2">&quot;kCGWindowAlpha&quot;</span><span class="o">=&gt;</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">},</span> <span class="p">{</span><span class="s2">&quot;kCGWindowLayer&quot;</span><span class="o">=&gt;</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;kCGWindowName&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;Emacs@shane-macbook.local&quot;</span><span class="p">,</span> <span class="s2">&quot;kCGWindowMemoryUsage&quot;</span><span class="o">=&gt;</span><span class="mi">4018228</span><span class="p">,</span> <span class="s2">&quot;kCGWindowIsOnscreen&quot;</span><span class="o">=&gt;</span><span class="kp">true</span><span class="p">,</span> <span class="s2">&quot;kCGWindowSharingState&quot;</span><span class="o">=&gt;</span><span class="mi">1</span><span class="p">,</span> <span class="s2">&quot;kCGWindowOwnerPID&quot;</span><span class="o">=&gt;</span><span class="mi">90225</span><span class="p">,</span> <span class="s2">&quot;kCGWindowNumber&quot;</span><span class="o">=&gt;</span><span class="mi">7683</span><span class="p">,</span> <span class="s2">&quot;kCGWindowOwnerName&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;Emacs&quot;</span><span class="p">,</span> <span class="s2">&quot;kCGWindowStoreType&quot;</span><span class="o">=&gt;</span><span class="mi">2</span><span class="p">,</span> <span class="s2">&quot;kCGWindowBounds&quot;</span><span class="o">=&gt;</span><span class="p">{</span><span class="s2">&quot;Height&quot;</span><span class="o">=&gt;</span><span class="mi">764</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;X&quot;</span><span class="o">=&gt;</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;Width&quot;</span><span class="o">=&gt;</span><span class="mi">1274</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;Y&quot;</span><span class="o">=&gt;</span><span class="mi">26</span><span class="o">.</span><span class="mi">0</span><span class="p">},</span> <span class="s2">&quot;kCGWindowAlpha&quot;</span><span class="o">=&gt;</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">},</span> <span class="p">{</span><span class="s2">&quot;kCGWindowLayer&quot;</span><span class="o">=&gt;</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;kCGWindowName&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;Shane&#39;s Home - Vimperator&quot;</span><span class="p">,</span> <span class="s2">&quot;kCGWindowMemoryUsage&quot;</span><span class="o">=&gt;</span><span class="mi">5328948</span><span class="p">,</span> <span class="s2">&quot;kCGWindowIsOnscreen&quot;</span><span class="o">=&gt;</span><span class="kp">true</span><span class="p">,</span> <span class="s2">&quot;kCGWindowSharingState&quot;</span><span class="o">=&gt;</span><span class="mi">1</span><span class="p">,</span> <span class="s2">&quot;kCGWindowOwnerPID&quot;</span><span class="o">=&gt;</span><span class="mi">52228</span><span class="p">,</span> <span class="s2">&quot;kCGWindowNumber&quot;</span><span class="o">=&gt;</span><span class="mi">112</span><span class="p">,</span> <span class="s2">&quot;kCGWindowOwnerName&quot;</span><span class="o">=&gt;</span><span class="s2">&quot;Firefox&quot;</span><span class="p">,</span> <span class="s2">&quot;kCGWindowStoreType&quot;</span><span class="o">=&gt;</span><span class="mi">2</span><span class="p">,</span> <span class="s2">&quot;kCGWindowBounds&quot;</span><span class="o">=&gt;</span><span class="p">{</span><span class="s2">&quot;Height&quot;</span><span class="o">=&gt;</span><span class="mi">770</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;X&quot;</span><span class="o">=&gt;</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;Width&quot;</span><span class="o">=&gt;</span><span class="mi">1280</span><span class="o">.</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;Y&quot;</span><span class="o">=&gt;</span><span class="mi">26</span><span class="o">.</span><span class="mi">0</span><span class="p">},</span> <span class="s2">&quot;kCGWindowAlpha&quot;</span><span class="o">=&gt;</span><span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="p">}</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>在10.8之前这个hash里会有一个名为“kCGWindowWorkspace”的键，但是现在已经取消了这个值，我想破脑袋google了一圈又一圈，也真没找到什么行之有效的方式获取当前的桌面号。</p>

<p>第二，怎么把window number和ACXUIElementRef关联起来。上面说过的CGWindowListCopyWindowInfo方法能把当前桌面上的窗口全都找出来，同时还能看到其中有个key为“kCGWindowNumber”，这便是窗口的id。然而我们现在需要对window进行move、resize这些操作，我现在知道的方法就是获取窗口AXUIElementRef，然而使用AXUIElementCopyAttributeValue通过application的reference获得窗口列表里却丝毫找不到关于WindowNumber的影子。好吧，难道我要比较两个对象的窗口位置和大小来匹配CGWindowListCopyWindowInfo和AXUIElementCopyAttributeValue产生的两组结果，真的好荒谬啊。</p>

<p>于是我放弃了，留下了前面那个莫名奇妙的例子。如果非要用的话也未尝不可。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tiling Window Manager (1)]]></title>
    <link href="http://shanexu.org/blog/2013/04/07/tiling-window-manager/"/>
    <updated>2013-04-07T01:19:00+08:00</updated>
    <id>http://shanexu.org/blog/2013/04/07/tiling-window-manager</id>
    <content type="html"><![CDATA[<div class='begin-indent2em' filter='p:not(:has(a.fancybox :first-child))'></div>


<blockquote><p>I would die for XMonad working with native OSX windows. Interested in any answers beyond the crappy things I&rsquo;ve seen already.</p></blockquote>

<p>写这篇文章是因为实在对os x的窗口管理实在已经吐槽无力了。</p>

<p>首先要解释一下什么是tiling window manager。Tiline Window Manager，也就是平铺式窗口管理器。平铺式窗口管理器区别于普通的窗口管理器，主要体现在平铺两个字。平铺是窗口管理器其主要目的是将屏幕空间分割成互不重合的几个区块。这样的特性能够让人同时关注多个窗口，同时还能尽可能地利用屏幕空间。同时省去了用鼠标调节窗口大小的麻烦，提高工作效率。其实大部分人还是不需要平铺式窗口管理器的。</p>

<p>第一次接触平铺式窗口管理器是在。。。好吧忘了什么时候的事情了。应该是在linuxsir上看到的一篇文章吧。那时候其实很无聊，每天几乎在摆弄linux的桌面环境，从gnome换到kde，再从kde换到xfce，然后用openbox，接着捣鼓fluxbox，然后用了一会儿e17（e17真的很漂亮，但是不好用），然后在fvwm上坚持过一段时间。然后就在好像没什么可以玩的时候，终于读到了那篇介绍平铺是窗口管理器的文章。</p>

<p>好吧，让我回忆一下，最早接触的平铺是窗口管理器是哪一个吧。
<a href="http://awesome.naquadah.org/">awesome</a>，应该就是他了。其实从名字来看就知道他有多diao了。awesome其实很省心，默认配置自带一个panel，然后还有各种小插件（小插件什么的我几乎一次都没用过），然后官网上还有几个漂亮的主题，让装13的门槛迅速降低数个等级，同时配置文件又是用lua写的，在使用窗口管理器的同时又能学习一门新语言真是双赢啊。</p>

<p><img src="http://50.116.59.228/shanexu.org/images/tiling-1.png" title="#1" alt="ubuntu 13.04 with awesome"></p>

<p>出于某些原因，我没有长期使用下去，可能当时没有习惯auto tiling window manager吧，打开一个窗口，自动平铺到屏幕上，感觉自己没法控制。接着是<a href="http://aerosuidae.net/musca.html">Musca</a>，和awesome不一样Musca是一个手动平铺式窗口管理器。Musca让用户手动将screen切分成不同的frames，然后把应用程序手动放到一个个frame里面。Musca没有提供任何panel、tab之类的控件，如果非要这些东西不可的话，可以拉一个xfce的panel，或者tint2之类的panel。我那时候的配置应该是Archlinux+ xfce4-panel + musca + dmenu，用了好久好久，那时候做操作系统实验的时候也是这个组合吧。</p>

<p>linux的rm -rf *之类的命令其实是非常危险的，尤其是在rm之前加sudo，然后想都没想直接输入密码。好吧那时候我/etc目录下执行了这个命令，反应过来的时候已经为时已晚。然后马上爬到校内论坛上问大家怎么补救，结果得到的答案便是“重装吧”。之后重装的时候也没有保存home里的配置文件。之后也懒得重写配置文件。</p>

<p>这之后玩的fvwm，其实比较喜欢fvwm那只小猫。用了<a href="http://box-look.org">box-look</a>上的<a href="http://box-look.org/content/show.php/Lethe?content=91022">Lethe</a>这个配置。是个非常清新的配置。</p>

<p>其实我至今都很喜欢kde3.5。kde总是给我很笨重的感觉，尤其是kde4，但是archlinux上有一个非常好的Kdemod，这是经过kde fans的优化的kde3.5桌面环境。这真的是一个值得拥有的桌面环境。可是好景不长，kde4的不断冲击，最后3.5的kdemod终于不再更新了。后来archlinux也衍生出了一个默认（其实只支持）KDE4桌面环境的发行版<a href="http://www.chakra-project.org">Chakra</a>。其实这是KDE狂人搞出来的发行版，他把所有的gtk依赖去除的干干净净。对于像Emacs、Firefox这样的无法替代的软件则使用Bundle系统mount到系统上。如果非常喜欢KDE可以尝试一下这个发行版。</p>

<p>跑题了。好吧我忘了到底在什么情况下我遇到了我的本命，<a href="http://xmonad.org">XMonad</a>，努力回忆下的话还是有点印象的。那时候有货吐槽各种窗口管理器，其中也包括了XMonad，为了装XMonad这个窗口管理器需要安装好几百M的ghc编译器，然后反吐槽的人就说，编译完了就可以把ghc删掉了。然后抱着试试看的心态安装了XMonad，XMonad还有个特点就是可以和现成的桌面环境结合，比如他能够替代xfce、gnome、kde的窗口管理器。同时还提供了在这三种桌面环境上默认配置，非常容易上手。同时XMonad的配置文件使用了Haskell语言进行编写，haskell是一门函数式编程语言，阅读起来也不是那么难。看久了也渐渐喜欢上这么语言，有时间应该去学学。XMonad用了好久好久。在KDE下用，在gnome下用，最后固定在了xfce4上了。</p>

<p><a href="http://subtile.subforge.org">subtile</a>是一个小插曲，那段时间在学习ruby，subtile是用ruby写的手动平铺式窗口管理器。基本上已经没有什么印象了。</p>

<p>时代在进步，终于有一天gnome 3带着他的gnome-shell来了。一开始gnome-shell，只是个花瓶，然后我发现我竟然可以用javascript写插件了，于是开始拥抱gnome-shell。想起那时候为了让right super键能够触发overlay view，挖到Mutter(gnome 3在gnome-shell的状态下的窗口管理器)的源代码里面。那段时间真是幸福。写到这里的时候突然想起漏了点东西，提到XMonad和gnmoe的时候还有一个不得不提的项目，就是<a href="http://www.bluetile.org/">Bluetile</a>，bluetile是一个将gnome和XMonad结合在一起的项目。自从gnome 3出来以后，这个项目也停滞不前了。其实gnome 3在fallback模式下可以用XMonad替代默认窗口管理器。但是实在是，gnome 3的fallback模式真的很难受，gnome 3的可配置度也真的一直在向KDE4看齐。难道在没有安装gnome-tweak-tools的时候，只能用gconftool-2进行配置吗？好在gnome-shell用户做了一个平铺窗口管理插件，<a href="http://gfxmonk.net/shellshape/">shellshape</a>，shellshape is inspired by bluetile。gnome-shell去除了在panel上的task manager，使用overlay view或者alt+tab切换应用程序。其实gnome-shell还有一个更惊人的改动，gnome-shell去除了窗口的最大化和最小化按钮，窗口上就只剩下一个孤零零的关闭按钮。其实他在学一些移动设备吧，每次都只有一个最大化的窗口，还好双击窗口的行为没有变。shellshape的出现，让我坚持使用gnome-shell了一段很长时间。</p>

<p>提到KDE4，其实KDE组是个很用心做软件的组。所有的kde软件都是union在一起的，比如dolphin中打开konsole，好吧，好久不用了，有些忘记了。而且kwin中加入平铺模式。只是kde有些让人无法满意的地方，比如，firefox无法替代，emacs无法替代，而这类gtk的软件真的在kde下很难看。无法忍受。我是一个对这种事情非常吹毛求疵的人。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安装ruby-debug]]></title>
    <link href="http://shanexu.org/blog/2013/03/29/an-zhuang-ruby-debug/"/>
    <updated>2013-03-29T11:56:00+08:00</updated>
    <id>http://shanexu.org/blog/2013/03/29/an-zhuang-ruby-debug</id>
    <content type="html"><![CDATA[<div class="begin-indent2em"></div>


<p>最近想在emacs里面调试ruby，搜到一篇博文说是安装ruby-debug和ruby-debug-extra，于是首先尝试安装ruby-debug</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm use 1.9.3
</span><span class='line'>gem search ruby-debug -r
</span><span class='line'>gem install ruby-debug</span></code></pre></td></tr></table></div></figure>


<p>然后找到<a href="http://rubyforge.org/docman/view.php/8883/10451/ruby-debug.html">ruby-debug</a>的官方文档，然后自己胡乱写了个脚本开始对着文档调试，然后就是rdebug抛错。之后发现竟然还有一个ruby-debug19的包。然后又安装ruby-debug19。尝试运行rdebug，还是出错。没辙拿着错误信息直接上google，终于在<a href="http://stackoverflow.com/questions/8378277/cannot-use-ruby-debug19-with-1-9-3-p0">stackoverflow</a>找到答案。貌似答案的出处在这里<a href="http://blog.wyeworks.com/2011/11/1/ruby-1-9-3-and-ruby-debug/">http://blog.wyeworks.com/2011/11/1/ruby-1-9-3-and-ruby-debug/</a>
首先需要从<a href="http://rubyforge.org/frs/?group_id=8883">http://rubyforge.org/frs/?group_id=8883</a>下载</p>

<ol>
<li>linecache19-0.5.13.gem</li>
<li>ruby_core_source-0.1.5.gem</li>
<li>ruby-debug19-0.11.6.gem</li>
<li>ruby-debug-base19-0.11.26.gem</li>
</ol>


<p>然后用下面的命令安装：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>which ruby
</span><span class='line'>export RVM_SRC=/Users/shane/.rvm/src/ruby-1.9.3-p392
</span><span class='line'>gem install archive-tar-minitar
</span><span class='line'>gem install ruby_core_source-0.1.5.gem -- --with-ruby-include=$RVM_SRC
</span><span class='line'>gem install linecache19-0.5.13.gem -- --with-ruby-include=$RVM_SRC
</span><span class='line'>gem install ruby-debug-base19-0.11.26.gem -- --with-ruby-include=$RVM_SRC
</span><span class='line'>gem install ruby-debug19-0.11.6.gem -- --with-ruby-include=$RVM_SRC</span></code></pre></td></tr></table></div></figure>


<p>结果后来在安装rdebug for emacs的时候看到了一个gem， <a href="https://github.com/cldwalker/debugger">debugger</a>，感觉这个包比较好。</p>

<blockquote><p>A fork of ruby-debug(19) that works on 1.9.2 and 1.9.3 and installs easily for rvm/rbenv rubies.</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install debugger</span></code></pre></td></tr></table></div></figure>


<p>然后在emacs里面用el-get安装rdebug就好了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[面朝大海，春暖花开]]></title>
    <link href="http://shanexu.org/blog/2013/03/26/mian-zhao-da-hai-%2Cchun-nuan-hua-kai/"/>
    <updated>2013-03-26T00:39:00+08:00</updated>
    <id>http://shanexu.org/blog/2013/03/26/mian-zhao-da-hai-,chun-nuan-hua-kai</id>
    <content type="html"><![CDATA[<div class="begin-indent2em"></div>


<p>今天是海子的忌日。</p>

<blockquote><p>从明天起，做一个幸福的人<br/>喂马，劈柴，周游世界<br/>从明天起，关心粮食和蔬菜<br/>我有一所房子，面朝大海，春暖花开</p><p>从明天起，和每一个亲人通信<br/>告诉他们我的幸福<br/>那幸福的闪电告诉我的<br/>我将告诉每一个人</p><p>给每一条河每一座山取一个温暖的名字<br/>陌生人，我也为你祝福<br/>愿你有一个灿烂的前程<br/>愿你有情人终成眷属<br/>愿你在尘世获的幸福<br/>我也愿面朝大海，春暖花开</p></blockquote>


<p>曾经看到一篇文章说作者在美国教授学生孩子的这首诗，在谈及诗人海子的生平的时候，学生都非常无法理解能够写下如此充满生机的诗篇的诗人会选择卧轨这种极端的方式结束自己的生命。</p>

<p>我一向是非常向往这个诗人，但是往往向往的事物是最遥不可及的。我没有很系统的去读海子的作品，买过一本薄薄的诗集，只看看寥寥几篇，“姐姐，今夜我在德令，夜色笼罩”，“说声分手吧，分开编过少女秀发的十指，秀发如五月的麦苗，曾轻轻含在嘴里”，还有一本如字典般的全集，这本书则是几乎一页都未曾翻动过。</p>

<p>现在的我确实是比平日更加多愁善感，仿佛眼前已经看不到任何希望了，每天浑浑噩噩的度日，昼夜颠倒，三餐不济，说不准哪天我真的会随之诗人乘风而去了，曾经有人说我，“我总觉得你有诗人的气质”，我是太过犹豫，太过悲观，太过感伤，或许我只是对许许多多的事物失去了兴趣，又或许我已经对许许多多的事物失去了希望，我不知道接下来的日子该怎么过下去了。我现在好害怕和妈妈打电话，我真的不知道该怎么说，我甚至觉得我自己已经单纯的不想去做那些事情了，我已经厌倦了这样的生活。</p>

<p>好吧，最后还是引用海子的诗句。</p>

<blockquote><p>大风从东吹到西，从北刮到南，无视黑夜和黎明。你所说的曙光究竟是什么意思。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我已经不再爱你]]></title>
    <link href="http://shanexu.org/blog/2013/03/17/wo-yi-jing-bu-zai-ai-ni/"/>
    <updated>2013-03-17T01:43:00+08:00</updated>
    <id>http://shanexu.org/blog/2013/03/17/wo-yi-jing-bu-zai-ai-ni</id>
    <content type="html"><![CDATA[<div class='begin-indent2em'></div>


<p>没想到改一个appleId帐号密码，需要在三个设备上来回反复重复地输入密码。我的人生是该有一个新的开始了。我蜷缩在家了多时，我蜷缩在床上整日地抱着笔记本，我假装自己投入地写自己的博客，我假装为了实现一个效果废寝忘食。然而我如此费尽心机筑造的高墙却因为某人的几句话彻底崩溃。</p>

<p>这世界真心好笑。我花了这么多的时间，这么多的金钱，这么多的精力，却连一点点小小的认可都换不来。所以在经历了这样的事情之后，我终于看清了自己，我已经不再对一些事情抱有希冀，这世界上的有些东西就如同命中注定一般有些人是无法得到的。</p>

<p>我保持＂秒速5厘米＂的状态已经快两个月了，我心里是有一点恐慌的。说到秒速5厘米这货我反复看了好多遍，说到有什么电影一定要和某个人看的话，便只有这电影了，而事实我也这么做了，在离开的前一天晚上么？记忆已经开始模糊了，这是好事吗？</p>

<p>2013年3月16日，我从你那里得知了一些对于我来说无关紧要的事情，我狠狠地咬牙，我决定我已经不爱你了。</p>

<p>最后的最后，让我引用夏川真凉的话。</p>

<blockquote><p>一边嘀咕着空洞的求爱词句，一边把动物的尸体和卵，植物的种子、叶子和根部，碾碎塞进嘴里，你不觉得这正好表现出了恋爱这种行为的卑贱吗？</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Selecting HTML Comments with jQuery]]></title>
    <link href="http://shanexu.org/blog/2013/03/13/selecting-html-comments-with-jquery/"/>
    <updated>2013-03-13T12:40:00+08:00</updated>
    <id>http://shanexu.org/blog/2013/03/13/selecting-html-comments-with-jquery</id>
    <content type="html"><![CDATA[<div class='begin-indent2em' filter='p:not(:has(a.fancybox :first-child))'></div>


<p>前几日想在博客blogs列表上上做一个read more &amp; less的效果，几经周折，总算做了一个比较满意的版本。其实原理很简单只是细节问题接踵而至。octopress中有<em>&lt;!&minus;&minus; more &minus;&minus;&gt;</em>这个注释把文章分成两截，其实在执行<em>Read more</em>的时候只要从文章中找到<em>&lt;!&minus;&minus; more &minus;&minus;&gt;</em>注释并截取下半截，并添加到原来的“.entry-content div”中即可。一开始也没有多想，在我看来jQuery应该是没有选取注释的选择器的，的确最后证明我的想法的确是正确的。于是又用了在文档中添加display为none的元素的方法。于是我就是在<em>&lt;!&minus;&minus; more &minus;&minus;&gt;</em>的后面增加了一个<em>&lt;div class=&lsquo;read-more-mark&rsquo;&gt;&lt;/div&gt;</em>这样的标记性元素。于是要选取后半截只要这样就行了。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.read-more-mark&#39;</span><span class="p">).</span><span class="nx">nextAll</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p>但在文档中插入没什么用的标记元素总觉得不太好，经过google关键词检索搜到了一篇题为<a href="http://www.bennadel.com/blog/1563-jQuery-Comments-Plug-in-To-Access-HTML-Comments-For-DOM-Templating.htm">jQuery Comments() Plug-in To Access HTML Comments For DOM Templating</a>文章提供的代码如下：</p>

<figure class='code'><figcaption><span>jQuery Comments() Plug-in</span><a href='http://www.bennadel.com/index.cfm?event=blog.downloadcode&id=1563&index=1'>Download </a></figcaption> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// This jQuery plugin will gather the comments within</span>
</span><span class='line'><span class="c1">// the current jQuery collection, returning all the</span>
</span><span class='line'><span class="c1">// comments in a new jQuery collection.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">// NOTE: Comments are wrapped in DIV tags.</span>
</span><span class='line'>
</span><span class='line'><span class="nx">jQuery</span><span class="p">.</span><span class="nx">fn</span><span class="p">.</span><span class="nx">comments</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span> <span class="nx">blnDeep</span> <span class="p">){</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">blnDeep</span> <span class="o">=</span> <span class="p">(</span><span class="nx">blnDeep</span> <span class="o">||</span> <span class="kc">false</span><span class="p">);</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">jComments</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span> <span class="p">[]</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Loop over each node to search its children for</span>
</span><span class='line'>  <span class="c1">// comment nodes and element nodes (if deep search).</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span>
</span><span class='line'>      <span class="kd">function</span><span class="p">(</span> <span class="nx">intI</span><span class="p">,</span> <span class="nx">objNode</span> <span class="p">){</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">objChildNode</span> <span class="o">=</span> <span class="nx">objNode</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">;</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">strParentID</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span> <span class="k">this</span> <span class="p">).</span><span class="nx">attr</span><span class="p">(</span> <span class="s2">&quot;id&quot;</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="c1">// Keep looping over the top-level children</span>
</span><span class='line'>          <span class="c1">// while we have a node to examine.</span>
</span><span class='line'>          <span class="k">while</span> <span class="p">(</span><span class="nx">objChildNode</span><span class="p">){</span>
</span><span class='line'>
</span><span class='line'>              <span class="c1">// Check to see if this node is a comment.</span>
</span><span class='line'>              <span class="k">if</span> <span class="p">(</span><span class="nx">objChildNode</span><span class="p">.</span><span class="nx">nodeType</span> <span class="o">===</span> <span class="mi">8</span><span class="p">){</span>
</span><span class='line'>
</span><span class='line'>                  <span class="c1">// We found a comment node. Add it to</span>
</span><span class='line'>                  <span class="c1">// the nodes collection wrapped in a</span>
</span><span class='line'>                  <span class="c1">// DIV (as we may have HTML).</span>
</span><span class='line'>                  <span class="nx">jComments</span> <span class="o">=</span> <span class="nx">jComments</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span>
</span><span class='line'>                      <span class="s2">&quot;&lt;div rel=&#39;&quot;</span> <span class="o">+</span> <span class="nx">strParentID</span> <span class="o">+</span> <span class="s2">&quot;&#39;&gt;&quot;</span> <span class="o">+</span>
</span><span class='line'>                      <span class="nx">objChildNode</span><span class="p">.</span><span class="nx">nodeValue</span> <span class="o">+</span>
</span><span class='line'>                      <span class="s2">&quot;&lt;/div&gt;&quot;</span>
</span><span class='line'>                      <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>              <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span>
</span><span class='line'>                  <span class="nx">blnDeep</span> <span class="o">&amp;&amp;</span>
</span><span class='line'>                  <span class="p">(</span><span class="nx">objChildNode</span><span class="p">.</span><span class="nx">nodeType</span> <span class="o">===</span> <span class="mi">1</span><span class="p">)</span>
</span><span class='line'>                  <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>                  <span class="c1">// Traverse this node deeply.</span>
</span><span class='line'>                  <span class="nx">jComments</span> <span class="o">=</span> <span class="nx">jComments</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span>
</span><span class='line'>                      <span class="nx">$</span><span class="p">(</span> <span class="nx">objChildNode</span> <span class="p">).</span><span class="nx">comments</span><span class="p">(</span> <span class="kc">true</span> <span class="p">)</span>
</span><span class='line'>                      <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>              <span class="c1">// Move to the next sibling.</span>
</span><span class='line'>              <span class="nx">objChildNode</span> <span class="o">=</span> <span class="nx">objChildNode</span><span class="p">.</span><span class="nx">nextSibling</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Return the jQuery comments collection.</span>
</span><span class='line'>  <span class="k">return</span><span class="p">(</span> <span class="nx">jComments</span> <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>上面的代码可以揣摩出，使用xml dom element的.nextSlibling方法是可以获得任何类型的xml dom element的。下表是从w3schools.com中摘录的<em>NodeTypes &ndash; Named Constants</em>表格。</p>

<table>
    <tr>
        <th>NodeType</th>
        <th>Named Constant</th>
    </tr>
    <tr>
        <td>1</td>
        <td>ELEMENT_NODE</td>
    </tr>
    <tr>
        <td>2</td>
        <td>ATTRIBUTE_NODE</td>
    </tr>
    <tr>
        <td>3</td>
        <td>TEXT_NODE</td>
    </tr>
    <tr>
        <td>4</td>
        <td>CDATA_SECTION_NODE</td>
    </tr>
    <tr>
        <td>5</td>
        <td>ENTITY_REFERENCE_NODE</td>
    </tr>
    <tr>
        <td>6</td>
        <td>ENTITY_NODE</td>
    </tr>
    <tr>
        <td>7</td>
        <td>PROCESSING_INSTRUCTION_NODE</td>
    </tr>
    <tr>
        <td>8</td>
        <td>COMMENT_NODE</td>
    </tr>
    <tr>
        <td>9</td>
        <td>DOCUMENT_NODE</td>
    </tr>
    <tr>
        <td>10</td>
        <td>DOCUMENT_TYPE_NODE</td>
    </tr>
    <tr>
        <td>11</td>
        <td>DOCUMENT_FRAGMENT_NODE</td>
    </tr>
    <tr>
        <td>12</td>
        <td>NOTATION_NODE</td>
    </tr>
</table>


<p>在重新检索jQuery API文档之后得到了一个<a href="http://api.jquery.com/contents/"><em>.contents()</em></a>方法。</p>

<blockquote><p>Given a jQuery object that represents a set of DOM elements, the .contents() method allows us to search throughthe immediate children of these elements in the DOM tree and construct a new jQuery object from the matching elements. The .contents() and .children() methods are similar, except that the former includes text nodes as well as HTML elements in the resulting jQuery object.</p>

<p>The .contents() method can also be used to get the content document of an iframe, if the iframe is on the same domain as the main page.</p></blockquote>

<p>利用<em>.contents()</em>方法可以下面的方式获得文档中的注释。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="s2">&quot;.entry-content&quot;</span><span class="p">).</span><span class="nx">contents</span><span class="p">().</span><span class="nx">filter</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">nodeType</span> <span class="o">===</span> <span class="mi">8</span><span class="p">;</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Emacs 24.3发布]]></title>
    <link href="http://shanexu.org/blog/2013/03/11/emacs-24-dot-3fa-bu/"/>
    <updated>2013-03-11T09:27:00+08:00</updated>
    <id>http://shanexu.org/blog/2013/03/11/emacs-24-dot-3fa-bu</id>
    <content type="html"><![CDATA[<div class='begin-indent2em' filter='p:not(:has(a.fancybox :first-child))'></div>


<p>首先恭喜一下Emacs 24.3发布。于是抽空把自己的emacs更新了下。</p>

<blockquote><p><strong>The current stable release is 24.3</strong>. To obtain it, visit the <a href="http://www.gnu.org/software/emacs/#Obtaining">obtaining</a> section.</p>

<p>Emacs 24 has a wide variety of new features, including:</p>

<ul>
<li>A packaging system and interface (M-x list-packages) for downloading and installing extensions. A default package archive is hosted by GNU and maintained by the Emacs developers.</li>
<li>Support for displaying and editing bidirectional text, including right-to-left scripts such as Arabic and Hebrew.</li>
<li>Support for lexical scoping in Emacs Lisp.</li>
<li>Improvements to the Custom Themes system (M-x customize-themes).</li>
<li>Unified and improved completion system in many modes and packages.</li>
<li>Built-in support for <a href="http://www.gnu.org/software/gnutls/">GnuTLS</a>, <a href="http://www.gtk.org/">GTK+ 3</a>, <a href="http://www.imagemagick.org/script/index.php">ImageMagick</a>, <a href="http://selinuxproject.org/page/Main_Page">SELinux</a>, and <a href="http://www.xmlsoft.org/">Libxml2</a>.</li>
</ul>


<p>For more information, read the <a href="http://www.gnu.org/software/emacs/NEWS.24.3">News</a> file.</p></blockquote>

<!-- more -->


<p><img src="http://50.116.59.228/shanexu.org/images/emacs24.3-1.png" title="Wellcome to Emacs" alt="Wellcome to Emacs">
<img src="http://50.116.59.228/shanexu.org/images/emacs24.3-2.png" title="M-x list-packages" alt="M-x list-packages">
<img src="http://50.116.59.228/shanexu.org/images/emacs24.3-3.png" title="M-x customize-themes" alt="M-x customize-themes"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[新的开始？]]></title>
    <link href="http://shanexu.org/blog/2013/03/10/xin-de-kai-shi-%3F/"/>
    <updated>2013-03-10T22:18:00+08:00</updated>
    <id>http://shanexu.org/blog/2013/03/10/xin-de-kai-shi-?</id>
    <content type="html"><![CDATA[<div class='begin-indent2em'></div>


<p>终于要从纵我放逐的一个月的生活中走出来了吗？回想一下这一个多月的生活补了无数的番，补完了Criminal Minds第七季，并且追上了第八季的进度，复习了第一季，然后看了三四本技术书，回顾了半本国境以南太阳以西，在最后的一星期里，注册了一个域名，开了自己的博客。其实好像我做了好多事情，就好像要弥补过去一年里所失去的一样。为了某些事情，我丢掉了好多东西，我没有时间做自己喜欢的事情，只是一味的顺从，时不时我会仰头叹息几声，然后笑脸相迎，我真觉得自己好贱。</p>

<p>然后，在失去了一切之后，我甚至在没有找好下家的情况下毅然决然地辞职了，我只是想换一个工作环境，我只是这样告诉自己。然而，我自己知道，我已经厌倦这样的生活了。一个陷入僵局的生活。</p>

<p>“和你在一起，我哪里都到达不了！”寻羊冒险记里让我感触最深地话。在我从她的家（那里曾是我们的家）里离开的那天我告诉了我曾经在那书里读到的那句话。她说，是啊，和你在一起我哪里都到达不了。</p>

<p>好吧，我终于要从一个多月的无业游民状态解脱了，可是还是有点不舍。我不愿太快答复offer也是出于这个原因。我不想上班，我不想工作，我不想努力，我想放任自由。</p>

<p>然而一切的一切明天开始改变。这会是一个新的开始吗？还是又一轮的无奈。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mobile Safari Automatically Scales Text]]></title>
    <link href="http://shanexu.org/blog/2013/03/08/mobile-safari-automatically-scales-text/"/>
    <updated>2013-03-08T22:13:00+08:00</updated>
    <id>http://shanexu.org/blog/2013/03/08/mobile-safari-automatically-scales-text</id>
    <content type="html"><![CDATA[<div class='begin-indent2em' filter='p:not(:has(a.fancybox :first-child))'></div>


<p>今天用iPhone浏览昨天写的<a href="http://shanexu.org/blog/2013/03/07/guan-yu-shou-xing-suo-jin/"><em>关于首行缩进</em></a>的日志的时候发现代码引用部分字体出现莫名其妙的放大现象，导致效果很不好。以为是最近老是换iPhone的字体所致，于是就打开了xcode的iPhone模拟器，一来可以看看模拟器上是不是出现这样的现象，二来也可以顺便调戏一下模拟器上的Mobile Safari。</p>

<p>结果模拟器上的Mobile Safari也出现了这样的现象。于是打开Safari调戏Mobile Safari。发现从code标签开始到最深处的span之前的那一层的font-size的计算值都是好的，直到最后一层的时候就莫名其妙的变大了。即便我在最后一层的span上设置了font-size的大小也无济于事，总之，折腾了半天，也没有个结果。无奈之下只能求助于google。</p>

<p><img src="http://50.116.59.228/shanexu.org/images/mobile_safari-1.png" title="#1" alt="Mobile Safari automatically scales text"></p>

<!-- more -->


<p>Mobile Safari（也包括Android下的Chrome，FireFox，以及IE Mobile）在默认状态下会自动调整字体的大小以满足可读性的需求。如果把<em>-webkit-text-size-adjust（-moz-text-size-adjust 或者 -ms-text-size-adjust）</em>设置成<em>100%</em>或者<em>none</em>，Mobile Safari就不会自动缩放文本。于是我在<em>custom/_layout.scss</em>里加段补丁。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nt">body</span><span class="p">{</span>
</span><span class='line'>    <span class="na">-webkit-text-size-adjust</span><span class="o">:</span> <span class="mi">100</span><span class="kt">%</span><span class="p">;</span>
</span><span class='line'>    <span class="na">-moz-text-size-adjust</span><span class="o">:</span> <span class="mi">100</span><span class="kt">%</span><span class="p">;</span>
</span><span class='line'>    <span class="na">-ms-text-size-adjust</span><span class="o">:</span> <span class="mi">100</span><span class="kt">%</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">@media</span> <span class="nt">only</span> <span class="nt">screen</span> <span class="nt">and</span> <span class="o">(</span><span class="nt">min-width</span><span class="nd">:768px</span><span class="o">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">body</span><span class="p">{</span>
</span><span class='line'>        <span class="na">-webkit-text-size-adjust</span><span class="o">:</span> <span class="no">auto</span><span class="p">;</span>
</span><span class='line'>        <span class="na">-moz-text-size-adjust</span><span class="o">:</span> <span class="no">auto</span><span class="p">;</span>
</span><span class='line'>        <span class="na">-ms-text-size-adjust</span><span class="o">:</span> <span class="no">auto</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>重新用iPhone载入页面，原来参差不齐的代码字体就变得整齐了。</p>

<p><img src="http://50.116.59.228/shanexu.org/images/mobile_safari-2.png" title="#2" alt="set -webkit-text-size-adjus to 100%"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我知道 by By2]]></title>
    <link href="http://shanexu.org/blog/2013/03/08/wo-zhi-dao-by-by2/"/>
    <updated>2013-03-08T00:34:00+08:00</updated>
    <id>http://shanexu.org/blog/2013/03/08/wo-zhi-dao-by-by2</id>
    <content type="html"><![CDATA[<div class='begin-indent2em'></div>


<p>好吧，我知道我自己这几天已经百无聊赖到了一定程度了。从墙外把好多年前的写的东西运回来的时候发现了一句很莫名其妙的歌词，</p>

<blockquote><p>我知道你还是爱着我 虽然 分开的理由 我们都已接受&hellip;&hellip;</p></blockquote>

<div class='end-indent2em'></div>


<p>而我已经完完全全忘记了曾经反复单曲循环的歌的。果然我是一个记不住歌词的人。</p>

<iframe height=498 width=510 frameborder=0 src="http://player.youku.com/embed/XODM5ODMxOTY=" allowfullscreen></iframe>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于首行缩进]]></title>
    <link href="http://shanexu.org/blog/2013/03/07/guan-yu-shou-xing-suo-jin/"/>
    <updated>2013-03-07T10:24:00+08:00</updated>
    <id>http://shanexu.org/blog/2013/03/07/guan-yu-shou-xing-suo-jin</id>
    <content type="html"><![CDATA[<div class="begin-indent2em"></div>


<p>最近在把以前写的小说搬到了这个地方。有件事情让我有些苦恼，原来没有首行缩进的中文文本是非常难看的东西。我想最直接方式就是给每个p标签加上一段style。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;p</span> <span class="na">style=</span><span class="s">&quot;text-indent: 2em;&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    接下来的日子与琳琅失去联络。于是只好用回忆来消磨时光。
</span><span class='line'>    可回忆却像是嚼久了的口香糖，越嚼越硬，最后竟硌伤了我自己。
</span><span class='line'>    琳琅终究还是从未喜欢过我。
</span><span class='line'><span class="nt">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后把这段style放在css中。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="nc">.indent2em</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">text-indent</span><span class="o">:</span> <span class="m">2em</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>然而octopress的post文档是从markdown文件生成的。markdown文本生成html时候并不能给生成的tag加上class等属性，要么使用html混排的方式把class写进tag中，但是这样一来就完全失去了使用markdown编写post的优势了，还不如整个去写一个html文档算了。所以要么把格式直接写在p标签里。比如这样，修改<a href="https://github.com/tommy351/Octopress-Theme-Slash">slash</a>主题的_post.scss文件。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.post</span><span class="p">{</span>
</span><span class='line'>    <span class="nt">h2</span><span class="nc">.title</span><span class="o">,</span> <span class="nc">.entry-content</span><span class="p">{</span>
</span><span class='line'>        <span class="nt">p</span><span class="p">{</span>
</span><span class='line'>            <span class="na">text-indent</span><span class="o">:</span> <span class="mi">2</span><span class="kt">em</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是这样势必造成所有的p标签都首行缩进，而且也只有对p标签起到作用。其实归根到底，我想要的效果就是只在需要缩进的地方缩进。既然markdown没有提供加入class的办法，那就只能靠javascript。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;a[href=&quot;the-path-of-blog&quot;]:eq(0)&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">next</span><span class="p">().</span><span class="nx">find</span><span class="p">(</span><span class="s1">&#39;&gt;p&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;indent2em&#39;</span><span class="p">).</span><span class="nx">length</span>
</span><span class='line'>        <span class="o">||</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.entry-content &gt; p&#39;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;indent2em&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>把这段放在<em>&lt;!&minus;&minus; more &minus;&minus;&gt;</em>之前，这样折叠之前的内容和折叠之后的内容都会有首行缩进的样式。这样还是有问题，不仅每次都要把这么一段代码放到文档中，同时段落的缩进还是很难控制，当然可以通过修改javascript代码来做到。还有一个麻烦的地方是每次都要把当前的博文的地址放到<em>“the-path-of-blog”</em>中去。好吧既然每张需要首行缩进的页面都要加上一段javascript代码那么干脆把代码放到单独的js文件去吧。
首先我们加三个css类。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="nc">.indent2em</span><span class="p">{</span>
</span><span class='line'>    <span class="na">text-indent</span><span class="o">:</span> <span class="mi">2</span><span class="kt">em</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nc">.begin-indent2em</span><span class="p">{</span>
</span><span class='line'>    <span class="na">display</span><span class="o">:</span> <span class="no">none</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nc">.end-indent2em</span><span class="p">{</span>
</span><span class='line'>    <span class="na">display</span><span class="o">:</span> <span class="no">none</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>第一个自不必说了，<em>begin-indent2em</em>和<em>end-indent2em</em>则用来分别标出开始和结束首行缩进的位置。这样就能在行文中自如的控制缩进格式了。</p>

<p>接着加入一段javascript。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">){</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">addIndent2em</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>        <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.begin-indent2em&#39;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">index</span><span class="p">,</span> <span class="nx">ele</span><span class="p">){</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">qele</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="nx">ele</span><span class="p">);</span>
</span><span class='line'>            <span class="nx">qele</span><span class="p">.</span><span class="nx">nextUntil</span><span class="p">(</span><span class="s1">&#39;.end-indent2em&#39;</span><span class="p">,</span> <span class="nx">qele</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;filter&#39;</span><span class="p">)</span><span class="o">||</span><span class="s1">&#39;p&#39;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s1">&#39;indent2em&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>    <span class="nx">addIndent2em</span><span class="p">();</span>
</span><span class='line'><span class="p">})(</span><span class="nx">jQuery</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>来看一下怎么用吧。下面这段文字来自我非常喜欢的一本书<a href="http://book.douban.com/subject/1794620/">芒果街上的小屋</a>，这是<em>头发（hair）</em>这一章的中英文对照。中文需要首行缩进，而英文不要。于是在markdown代码中加入了两个不占用空间的<em>div</em>风别标识需要开始和结束缩进的位置。而<em>begin div</em>的<em>filter</em>属性中可以加入过滤选择器，默认的时候只选择<em>p</em>标签。这样就能较为自由的控制缩进格式了。而实际效果也还可以，除了某些时候。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&#39;begin-indent2em&#39;</span> <span class="na">filter=</span><span class="s">&#39;p, block&#39;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>我们家里每个人的头发都不一样。爸爸的头发像扫把，根根直立往上插。而我，我的投放挺懒惰。它从来不听发夹和发带的话。卡洛斯的头发又直又厚。他不用梳头。蕾妮的头发滑滑的——会从你手里溜走。还有奇奇，他最小，茸茸的头发像毛皮。
</span><span class='line'>
</span><span class='line'>只有妈妈的头发，妈妈的头发，好像一朵朵小小的玫瑰花结，一枚枚小小的糖果圈儿，圈都那么拳曲，那么漂亮，因为她成天给它们上发卷。把鼻子伸进去闻一闻吧，当她搂着你时。当她搂着你时，你觉得那么安全，闻到的气味那么香甜。是那种待烤的面包的暖暖的香味，是那种她给你让出一角被窝时，和着体温散发的芬芳。你睡在她的身旁，外面下着雨，爸爸打着鼾。哦，鼾声、雨声，还有妈妈吗那闻起来像面包的头发。
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">&#39;end-indent2em&#39;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>Everybody in our family has different hair. My Papa’s hair is like a broom, all up in the air. And me, my hair is lazy. It never obeys barrettes or bands. Carlos’s hair is thick and straight. He doesn’t need to comb it. Nenny’s hair is slippery -- slides out of  your hand. And Kiki, who is the youngest, has hair like fur.
</span><span class='line'>
</span><span class='line'>But my mother’s hair, my mother’s hair, like little rosettes, like little candy circles all curly and pretty because she pinned it in pincurls all day, sweet to put your nose into when she is holding you, holding you and you feel safe, is the warm smell of bread before you bake it, is the smell when she makes room for you on her side of the bed still warm with her skin, and you sleep near her, the rain outside falling and Papa snoring. The snoring, the rain outside falling and Papa snoring. The snoring, the rain, and Mama’s hair that smells like bread.
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
